[{"C:\\develop\\careful-reader\\src\\App.tsx":"1","C:\\develop\\careful-reader\\src\\components\\common\\BookItem.tsx":"2","C:\\develop\\careful-reader\\src\\components\\common\\Checkbox.tsx":"3","C:\\develop\\careful-reader\\src\\components\\common\\Header.tsx":"4","C:\\develop\\careful-reader\\src\\components\\common\\index.ts":"5","C:\\develop\\careful-reader\\src\\components\\common\\Select.tsx":"6","C:\\develop\\careful-reader\\src\\components\\controls\\AuthButtons.tsx":"7","C:\\develop\\careful-reader\\src\\components\\controls\\index.ts":"8","C:\\develop\\careful-reader\\src\\components\\controls\\NavButtons.tsx":"9","C:\\develop\\careful-reader\\src\\components\\loading\\index.ts":"10","C:\\develop\\careful-reader\\src\\components\\loading\\Loading.tsx":"11","C:\\develop\\careful-reader\\src\\index.tsx":"12","C:\\develop\\careful-reader\\src\\pages\\details\\Details.tsx":"13","C:\\develop\\careful-reader\\src\\pages\\details\\index.ts":"14","C:\\develop\\careful-reader\\src\\pages\\feed\\feed.messages.ts":"15","C:\\develop\\careful-reader\\src\\pages\\feed\\Feed.tsx":"16","C:\\develop\\careful-reader\\src\\pages\\feed\\index.ts":"17","C:\\develop\\careful-reader\\src\\pages\\reader\\index.ts":"18","C:\\develop\\careful-reader\\src\\pages\\reader\\Reader.tsx":"19","C:\\develop\\careful-reader\\src\\pages\\settings\\index.ts":"20","C:\\develop\\careful-reader\\src\\pages\\settings\\settings.messages.ts":"21","C:\\develop\\careful-reader\\src\\pages\\settings\\Settings.tsx":"22","C:\\develop\\careful-reader\\src\\pages\\shelves\\common.tsx":"23","C:\\develop\\careful-reader\\src\\pages\\shelves\\index.ts":"24","C:\\develop\\careful-reader\\src\\pages\\shelves\\LocalShelve.tsx":"25","C:\\develop\\careful-reader\\src\\pages\\shelves\\RemoteShelve.tsx":"26","C:\\develop\\careful-reader\\src\\pages\\shelves\\Shelve.tsx":"27","C:\\develop\\careful-reader\\src\\pages\\shelves\\Shelves.tsx":"28","C:\\develop\\careful-reader\\src\\react-app-env.d.ts":"29","C:\\develop\\careful-reader\\src\\serviceWorker.ts":"30","C:\\develop\\careful-reader\\src\\setupTests.ts":"31","C:\\develop\\careful-reader\\src\\store\\AppStore.ts":"32","C:\\develop\\careful-reader\\src\\store\\LibraryStore.ts":"33","C:\\develop\\careful-reader\\src\\store\\RemoteLibraryStore.ts":"34","C:\\develop\\careful-reader\\src\\theme.ts":"35","C:\\develop\\careful-reader\\src\\types.ts":"36","C:\\develop\\careful-reader\\src\\uitls\\clientDB.ts":"37","C:\\develop\\careful-reader\\src\\uitls\\cloud.ts":"38","C:\\develop\\careful-reader\\src\\uitls\\common.ts":"39","C:\\develop\\careful-reader\\src\\uitls\\converter.ts":"40","C:\\develop\\careful-reader\\src\\uitls\\googleAPI.ts":"41","C:\\develop\\careful-reader\\src\\uitls\\styler.ts":"42","C:\\develop\\careful-reader\\src\\uitls\\xsl.js":"43"},{"size":2397,"mtime":1608816045711,"results":"44","hashOfConfig":"45"},{"size":1013,"mtime":1608818010438,"results":"46","hashOfConfig":"45"},{"size":499,"mtime":1605089758395,"results":"47","hashOfConfig":"45"},{"size":3926,"mtime":1609246805699,"results":"48","hashOfConfig":"45"},{"size":97,"mtime":1605089758396,"results":"49","hashOfConfig":"45"},{"size":906,"mtime":1605089758396,"results":"50","hashOfConfig":"45"},{"size":728,"mtime":1609245078054,"results":"51","hashOfConfig":"45"},{"size":178,"mtime":1605089758398,"results":"52","hashOfConfig":"45"},{"size":1114,"mtime":1605089758398,"results":"53","hashOfConfig":"45"},{"size":55,"mtime":1605089758399,"results":"54","hashOfConfig":"45"},{"size":354,"mtime":1605089758399,"results":"55","hashOfConfig":"45"},{"size":266,"mtime":1605089758401,"results":"56","hashOfConfig":"45"},{"size":2403,"mtime":1608816045714,"results":"57","hashOfConfig":"45"},{"size":55,"mtime":1605089758402,"results":"58","hashOfConfig":"45"},{"size":343,"mtime":1605089758409,"results":"59","hashOfConfig":"45"},{"size":1241,"mtime":1605089758403,"results":"60","hashOfConfig":"45"},{"size":46,"mtime":1605089758410,"results":"61","hashOfConfig":"45"},{"size":56,"mtime":1605089758412,"results":"62","hashOfConfig":"45"},{"size":5076,"mtime":1609252374226,"results":"63","hashOfConfig":"45"},{"size":58,"mtime":1605089758417,"results":"64","hashOfConfig":"45"},{"size":197,"mtime":1605089758418,"results":"65","hashOfConfig":"45"},{"size":3370,"mtime":1608816045716,"results":"66","hashOfConfig":"45"},{"size":1885,"mtime":1605091043289,"results":"67","hashOfConfig":"45"},{"size":59,"mtime":1605089758422,"results":"68","hashOfConfig":"45"},{"size":1185,"mtime":1610033836349,"results":"69","hashOfConfig":"45"},{"size":1767,"mtime":1608816045721,"results":"70","hashOfConfig":"45"},{"size":3098,"mtime":1608902888486,"results":"71","hashOfConfig":"45"},{"size":2711,"mtime":1608911201584,"results":"72","hashOfConfig":"45"},{"size":41,"mtime":1605090214708,"results":"73","hashOfConfig":"45"},{"size":5344,"mtime":1605089758422,"results":"74","hashOfConfig":"45"},{"size":260,"mtime":1605089758423,"results":"75","hashOfConfig":"45"},{"size":2344,"mtime":1610030739282,"results":"76","hashOfConfig":"45"},{"size":2693,"mtime":1609246315498,"results":"77","hashOfConfig":"45"},{"size":2855,"mtime":1610035504164,"results":"78","hashOfConfig":"45"},{"size":27,"mtime":1610031082695,"results":"79","hashOfConfig":"45"},{"size":327,"mtime":1608816045732,"results":"80","hashOfConfig":"45"},{"size":2187,"mtime":1610030739284,"results":"81","hashOfConfig":"45"},{"size":5443,"mtime":1610035281851,"results":"82","hashOfConfig":"45"},{"size":1862,"mtime":1609245078095,"results":"83","hashOfConfig":"45"},{"size":1291,"mtime":1608816045737,"results":"84","hashOfConfig":"45"},{"size":4705,"mtime":1605089758429,"results":"85","hashOfConfig":"45"},{"size":2372,"mtime":1605089758430,"results":"86","hashOfConfig":"45"},{"size":18300,"mtime":1608816045740,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"161cqoi",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\develop\\careful-reader\\src\\App.tsx",["181","182","183"],"import React, { useEffect } from 'react'\r\nimport './App.scss'\r\nimport Shelves from './pages/shelves'\r\nimport Reader from './pages/reader'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { observer, useLocalStore } from 'mobx-react'\r\nimport LibraryStoreContext, { LibraryStore } from './store/LibraryStore'\r\nimport RemoteLibraryStoreContext, {\r\n  RemoteLibraryStore,\r\n} from './store/RemoteLibraryStore'\r\nimport { Feed } from './pages/feed'\r\nimport { Details } from './pages/details'\r\nimport { IntlProvider } from 'react-intl'\r\nimport AppStoreContext, { AppStore } from './store/AppStore'\r\nimport { Settings } from './pages/settings'\r\n\r\nconst App = observer(function App() {\r\n  const libraryStore = useLocalStore(LibraryStore)\r\n  const remoteStore = useLocalStore(RemoteLibraryStore)\r\n  const appStore = useLocalStore(AppStore)\r\n  const basename =\r\n    process.env.NODE_ENV === 'development' ? '/' : process.env.PUBLIC_URL\r\n  const { isLoggedIn } = remoteStore\r\n  const messages = appStore.getLocaleMessages()\r\n\r\n  useEffect(() => {\r\n    libraryStore.fetchBooksListAction()\r\n  }, [])\r\n\r\n  const fetchBooks = async () => {\r\n    if (isLoggedIn) await remoteStore.fetchBooksListAction()\r\n  }\r\n  useEffect(() => {\r\n    fetchBooks()\r\n  }, [isLoggedIn])\r\n\r\n  return (\r\n    <AppStoreContext.Provider value={appStore}>\r\n      <LibraryStoreContext.Provider value={libraryStore}>\r\n        <RemoteLibraryStoreContext.Provider value={remoteStore}>\r\n          <IntlProvider locale={appStore.locale} defaultLocale={appStore.defaultLocale} messages={messages}>\r\n            <Router basename={basename}>\r\n              <Switch>\r\n                {/* <Route exact path=\"/\">\r\n                  <Feed />\r\n                </Route> */}\r\n                <Route exact path=\"/\">\r\n                  <Shelves />\r\n                </Route>\r\n                <Route exact path=\"/read/:bookId\">\r\n                  <Reader />\r\n                </Route>\r\n                <Route exact path=\"/details/:bookId\">\r\n                  <Details />\r\n                </Route>\r\n                <Route exact path=\"/settings\">\r\n                  <Settings />\r\n                </Route>\r\n              </Switch>\r\n            </Router>\r\n          </IntlProvider>\r\n        </RemoteLibraryStoreContext.Provider>\r\n      </LibraryStoreContext.Provider>\r\n    </AppStoreContext.Provider>\r\n  )\r\n})\r\n\r\nexport default App\r\n","C:\\develop\\careful-reader\\src\\components\\common\\BookItem.tsx",[],"C:\\develop\\careful-reader\\src\\components\\common\\Checkbox.tsx",[],"C:\\develop\\careful-reader\\src\\components\\common\\Header.tsx",[],"C:\\develop\\careful-reader\\src\\components\\common\\index.ts",[],"C:\\develop\\careful-reader\\src\\components\\common\\Select.tsx",[],"C:\\develop\\careful-reader\\src\\components\\controls\\AuthButtons.tsx",[],"C:\\develop\\careful-reader\\src\\components\\controls\\index.ts",[],"C:\\develop\\careful-reader\\src\\components\\controls\\NavButtons.tsx",[],"C:\\develop\\careful-reader\\src\\components\\loading\\index.ts",[],"C:\\develop\\careful-reader\\src\\components\\loading\\Loading.tsx",["184","185"],"import React, { ReactNode } from 'react'\r\nimport './loading.scss'\r\n\r\ninterface Loading {\r\n  loading: boolean\r\n  children: ReactNode\r\n}\r\nexport default function Loading({ loading, children }: Loading) {\r\n  return (\r\n    <>\r\n      <div className={loading ? 'loading' : 'hidden'}>\r\n        <div>Loading</div>\r\n      </div>\r\n      {children}\r\n    </>\r\n  )\r\n}","C:\\develop\\careful-reader\\src\\index.tsx",[],"C:\\develop\\careful-reader\\src\\pages\\details\\Details.tsx",["186","187"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Header } from '../../components/common'\r\nimport { observer } from 'mobx-react'\r\nimport LibraryStoreContext from '../../store/LibraryStore'\r\nimport { Book } from '../../types'\r\nimport BookItem from '../../components/common/BookItem'\r\n// import './Details.scss'\r\nimport RemoteLibraryStoreContext from '../../store/RemoteLibraryStore'\r\n\r\ninterface QueryParams {\r\n  bookId: string\r\n}\r\n\r\nconst Details = () => {\r\n  const queryParams = useParams<QueryParams>()\r\n  const bookId = parseInt(queryParams.bookId)\r\n  const {\r\n    books,\r\n    updateBookAction,\r\n    removeBookAction,\r\n    fetchBookTextAction,\r\n  } = useContext(LibraryStoreContext)\r\n  const { uploadBookAction, syncMetaAction } = useContext(\r\n    RemoteLibraryStoreContext\r\n  )\r\n  const [book, setBook] = useState<Book>()\r\n\r\n  useEffect(() => {\r\n    const book: Book = books.find((b: Book) => b.id === bookId)\r\n    setBook(book)\r\n  }, [books, bookId])\r\n\r\n  const uploadHandler = async (book: Book) => {\r\n    const text = await fetchBookTextAction(book.id)\r\n    const file = await uploadBookAction(book, text)\r\n    await updateBookAction(book.id, { ...book })\r\n  }\r\n\r\n  const deleteBookHandler = async (book: Book) => {\r\n    await removeBookAction(book)\r\n  }\r\n\r\n  const syncHandler = async (book: Book) => {\r\n    if (book.metaFileId) {\r\n      await syncMetaAction(book)\r\n    } else {\r\n      const text = await fetchBookTextAction(book.id)\r\n      const file = await uploadBookAction(book, text)\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className=\"details\">\r\n      <Header></Header>\r\n      {book &&\r\n        <section className=\"content\">\r\n          <div>{book.name}</div>\r\n          <BookItem book={book} />\r\n          <div className=\"info\">\r\n            <div className=\"controls\">\r\n              <button onClick={() => syncHandler(book)}>sync </button>\r\n              <button onClick={() => uploadHandler(book)}>upload</button>\r\n              <button\r\n                onClick={() => {\r\n                  deleteBookHandler(book)\r\n                }}\r\n              >\r\n                del\r\n              </button>\r\n              <button>info</button>\r\n              <div />\r\n              <div>{book.metaFileId}</div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(Details)","C:\\develop\\careful-reader\\src\\pages\\details\\index.ts",[],"C:\\develop\\careful-reader\\src\\pages\\feed\\feed.messages.ts",[],"C:\\develop\\careful-reader\\src\\pages\\feed\\Feed.tsx",[],"C:\\develop\\careful-reader\\src\\pages\\feed\\index.ts",[],"C:\\develop\\careful-reader\\src\\pages\\reader\\index.ts",[],"C:\\develop\\careful-reader\\src\\pages\\reader\\Reader.tsx",["188"],"import React, { useEffect, useState, useRef, useContext } from 'react'\r\nimport './Reader.scss'\r\nimport { useParams } from 'react-router-dom'\r\nimport { debounce } from '../../uitls/common'\r\nimport { hightLightElementsOnScreen } from '../../uitls/styler'\r\nimport { Header } from '../../components/common'\r\nimport LibraryStoreContext from '../../store/LibraryStore'\r\nimport AppContext from '../../store/AppStore'\r\nimport { observer } from 'mobx-react'\r\nimport useEventListener from '@use-it/event-listener'\r\nimport { Loading } from '../../components/loading'\r\nimport { useDebounce } from 'use-debounce'\r\nimport styled from 'styled-components'\r\n\r\nconst PageCount = styled.span`\r\n  white-space: nowrap;\r\n  padding: 6px 8px;\r\n`\r\ninterface QueryParams {\r\n  bookId: string\r\n}\r\n\r\nconst dfunc = debounce((fn) => fn && fn(), 100)\r\n\r\nexport default observer(function Reader() {\r\n  const { wordsHighlight, dynamicTextOrientation } = useContext(AppContext)\r\n  const { updateBookPositionAction, openBookAction, currentBook } = useContext(\r\n    LibraryStoreContext\r\n  )\r\n  const [numberOfcurrentPage, setNumberOfCurrentPage] = useState(0)\r\n  const [currenPositionPercent, setCurrenPositionPercent] = useState('0.0')\r\n  const [pagesCount, setPagesCount] = useState(0)\r\n  const [showControls, setShowControls] = useState(false)\r\n  const textContainerRef = useRef<HTMLDivElement | null>(null)\r\n  const elementsForHightlightRef = useRef([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const queryParams = useParams<QueryParams>()\r\n  const bookId = parseInt(queryParams.bookId)\r\n\r\n  const [motionStyle, setMotionStyle] = useState({})\r\n\r\n  useEffect(() => {\r\n    const { current } = textContainerRef\r\n    const openBook = async () => {\r\n      setLoading(true)\r\n      await openBookAction(bookId)\r\n      current!.innerHTML = currentBook.text\r\n      elementsForHightlightRef.current = getElementsForHightlight()\r\n      setPagesCount(getPagesCount())\r\n      restoreScrollPoition()\r\n      setLoading(false)\r\n    }\r\n\r\n    openBook()\r\n    current!.addEventListener('scroll', handleScroll)\r\n    return () => {\r\n      return current!.removeEventListener('scroll', handleScroll)\r\n    }\r\n  }, [])\r\n  const [dtoStyle] = useDebounce(motionStyle, 5)\r\n  const deviceOrientationHandler = ({ gamma }: DeviceOrientationEvent) => {\r\n    if (!dynamicTextOrientation) {\r\n      setMotionStyle({ transform: '' })\r\n      return\r\n    }\r\n    if (gamma) {\r\n      const style = {\r\n        transform: `rotateZ(${-gamma}deg)`,\r\n      }\r\n      setMotionStyle(style)\r\n    }\r\n  }\r\n  const bookTitle = () => currentBook?.info?.meta?.title || currentBook?.info?.name\r\n  useEventListener('deviceorientation', deviceOrientationHandler)\r\n  return (\r\n    <div className=\"reader\">\r\n      <Header className={`${showControls ? '' : ' hidden'} `} title={bookTitle()}>\r\n        <div className=\"\">{currenPositionPercent}%</div>\r\n        <PageCount>\r\n          {`${numberOfcurrentPage}/${pagesCount}`}\r\n        </PageCount>\r\n      </Header>\r\n      <Loading loading={loading}>\r\n        <div className={`list-view ${wordsHighlight ? 'highlight' : ''}`}>\r\n          <div\r\n            className=\"text-container\"\r\n            onClick={toggleMenuHandler}\r\n            style={dtoStyle}\r\n            ref={textContainerRef}\r\n          ></div>\r\n        </div>\r\n      </Loading>\r\n    </div>\r\n  )\r\n  \r\n  function getElementsForHightlight() {\r\n    const result: any = []\r\n    document.querySelectorAll('p').forEach((el: any) => {\r\n      result.push(el)\r\n    })\r\n    return result.sort((a: any, b: any) => a.offsetTop > b.offsetTop)\r\n  }\r\n\r\n  function handleScroll(e: Event) {\r\n    const { current } = textContainerRef\r\n    const { current: elementsForHightlight } = elementsForHightlightRef\r\n    if (current) {\r\n      const percent = getPercentOfScroll()\r\n      setCurrenPositionPercent(percent.toFixed(2))\r\n      setNumberOfCurrentPage(getNumberOfCurrentPage())\r\n      dfunc(() => {\r\n        const onScreen =\r\n          hightLightElementsOnScreen(current, elementsForHightlight) || []\r\n        updateBookPosition(onScreen[0])\r\n      })\r\n    }\r\n  }\r\n\r\n  function restoreScrollPoition() {\r\n    if (currentBook.meta) {\r\n      const toElement = document.querySelector(\r\n        `[data-id=\"${currentBook.meta.positionElement}\"]`\r\n      )\r\n      toElement?.scrollIntoView()\r\n    }\r\n  }\r\n\r\n  function getPercentOfScroll() {\r\n    const { current } = textContainerRef\r\n    return current ? (current.scrollTop * 100) / current.scrollHeight : 0.0\r\n  }\r\n\r\n  function updateBookPosition(posElement: HTMLElement) {\r\n    if (posElement) {\r\n      const positionElement = posElement.getAttribute('data-id')\r\n      updateBookPositionAction(bookId, positionElement)\r\n    }\r\n  }\r\n\r\n  function getPagesCount() {\r\n    const { current } = textContainerRef\r\n    return Math.round(current!.scrollHeight / current!.clientHeight)\r\n  }\r\n\r\n  function getNumberOfCurrentPage() {\r\n    const { current } = textContainerRef\r\n    return Math.round(current!.scrollTop / current!.clientHeight)\r\n  }\r\n\r\n  function toggleMenuHandler() {\r\n    setShowControls(!showControls)\r\n  }\r\n})\r\n","C:\\develop\\careful-reader\\src\\pages\\settings\\index.ts",[],"C:\\develop\\careful-reader\\src\\pages\\settings\\settings.messages.ts",[],"C:\\develop\\careful-reader\\src\\pages\\settings\\Settings.tsx",[],"C:\\develop\\careful-reader\\src\\pages\\shelves\\common.tsx",[],"C:\\develop\\careful-reader\\src\\pages\\shelves\\index.ts",[],"C:\\develop\\careful-reader\\src\\pages\\shelves\\LocalShelve.tsx",[],"C:\\develop\\careful-reader\\src\\pages\\shelves\\RemoteShelve.tsx",[],"C:\\develop\\careful-reader\\src\\pages\\shelves\\Shelve.tsx",[],"C:\\develop\\careful-reader\\src\\pages\\shelves\\Shelves.tsx",["189"],"import React from 'react'\r\nimport { Header } from '../../components/common'\r\nimport { observer } from 'mobx-react'\r\nimport RemoteBooksList from './RemoteShelve'\r\nimport { AddBookButton } from './common'\r\nimport LocalBooksList from './LocalShelve'\r\nimport SwipeableViews from 'react-swipeable-views'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\r\nimport Zoom from '@material-ui/core/Zoom'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport styled from 'styled-components'\r\n\r\nconst Contaier = styled.div`\r\n  position: relative;\r\n`\r\nconst Content = styled.div`\r\n  overflow: auto;\r\n`\r\nconst FabsContainer  = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0;\r\n`\r\nconst BottomMenu = styled.div`\r\n    position: fixed;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n`\r\nconst BottomMenuHeight = styled.div`\r\n`\r\n\r\nexport default observer(function Shelves() {\r\n  const theme = useTheme()\r\n  const [value, setValue] = React.useState(0)\r\n  const transitionDuration = {\r\n    enter: theme.transitions.duration.enteringScreen,\r\n    exit: theme.transitions.duration.leavingScreen,\r\n  }\r\n  const handleChangeIndex = (index: number) => setValue(index)\r\n  const handleChange = (event: any, index: number) => handleChangeIndex(index)\r\n\r\n  const fabs = [\r\n    {\r\n      color: 'primary',\r\n      icon: <AddIcon />,\r\n      label: 'Add',\r\n      clickHandler: () => {\r\n        console.log('hey you')\r\n      },\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Contaier>\r\n      <Header></Header>\r\n      <Content>\r\n        <SwipeableViews index={value} onChangeIndex={handleChangeIndex}>\r\n          <LocalBooksList />\r\n          <RemoteBooksList />\r\n          <div>favorite</div>\r\n        </SwipeableViews>\r\n      </Content>\r\n      <FabsContainer>\r\n          {fabs.map((fab, index) => (\r\n            <Zoom\r\n              key={fab.color}\r\n              in={value === index}\r\n              timeout={transitionDuration}\r\n              style={{\r\n                transitionDelay: `${\r\n                  value === index ? transitionDuration.exit : 0\r\n                }ms`,\r\n              }}\r\n              unmountOnExit\r\n            >\r\n              <AddBookButton />\r\n            </Zoom>\r\n          ))}\r\n      </FabsContainer>\r\n      <BottomMenu>\r\n      <BottomMenuHeight />\r\n\r\n        <BottomNavigation value={value} onChange={handleChange} showLabels>\r\n          <BottomNavigationAction label=\"local\" />\r\n          <BottomNavigationAction label=\"remote\" />\r\n          <BottomNavigationAction label=\"fav\" />\r\n        </BottomNavigation>\r\n      </BottomMenu>\r\n    </Contaier>\r\n  )\r\n})\r\n","C:\\develop\\careful-reader\\src\\react-app-env.d.ts",[],"C:\\develop\\careful-reader\\src\\serviceWorker.ts",[],"C:\\develop\\careful-reader\\src\\setupTests.ts",[],"C:\\develop\\careful-reader\\src\\store\\AppStore.ts",[],"C:\\develop\\careful-reader\\src\\store\\LibraryStore.ts",[],"C:\\develop\\careful-reader\\src\\store\\RemoteLibraryStore.ts",["190"],"import React from 'react'\r\nimport { observable, action } from 'mobx'\r\nimport { Book, RemoteBook } from '../types'\r\nimport * as cloud from '../uitls/cloud'\r\nimport libraryDB from '../uitls/clientDB'\r\n\r\nexport const RemoteLibraryStore = () => {\r\n  const remoteFolderName = 'careful-reader'\r\n  const initLibrary = action(async () => {\r\n    cloud.drive.create.folder('books-folder')\r\n  })\r\n  cloud.load().then(() => {\r\n    store.isClientLoaded = true\r\n    cloud.isLoggedIn().then((isLoggedIn) => (store.isLoggedIn = isLoggedIn))\r\n  })\r\n  const cloudAppFolder = cloud.appFolder\r\n  const cloudDrive = cloud.drive\r\n\r\n  const fetchBooksListAction = action(async () => {\r\n    store.isBooksLoading = true\r\n    // store.books = await gapi.list(`fileExtension=\"json\"`)\r\n    store.isBooksLoading = false\r\n  })\r\n\r\n  const uploadBookAction = action(async (book: Book) => {\r\n    store.isUploading = true\r\n    const [currentFolder] = await cloudDrive.getOrCreate.folder(\r\n      `name = '${remoteFolderName}'`,\r\n      remoteFolderName\r\n    )\r\n    const [currentFile] = await cloudDrive.getOrCreate.file(\r\n      `name = '${book.name}' and '${currentFolder.id}' in parents`,\r\n      book.name,\r\n      currentFolder.id\r\n    )\r\n    const bookText = await libraryDB.getBookText(book.id)\r\n    const result = await cloudDrive.upload(currentFile.id, bookText)\r\n    store.isUploading = false\r\n    return result\r\n  })\r\n\r\n  const syncMetaAction = action(async (book: Book) => {\r\n    const metaFileName = book.name + '.json'\r\n    const [currentFile] = await cloudAppFolder.getOrCreate.file(\r\n      `name = '${metaFileName}'`,\r\n      metaFileName\r\n    )\r\n    const result = await cloudAppFolder.upload(\r\n      currentFile.id,\r\n      JSON.stringify(book)\r\n    )\r\n    // if (book.metaFileId) {\r\n    //   await gapi.upload(book.metaFileId, JSON.stringify(book))\r\n    // }\r\n\r\n    // const [find] = await cloudAppFolder.find.file(`fileExtension=\"json\"`)\r\n    // console.log('find', find)\r\n  })\r\n\r\n  const downloadBookAction = action(async (book: RemoteBook) => {\r\n    // const meta: any = await gapi.download(book.id)\r\n    // let text: any = ''\r\n    // if (meta.textFileId) text = await gapi.download(meta.textFileId)\r\n    // return { meta, text }\r\n  })\r\n\r\n  const removeBookAction = action(async (book: any) => {\r\n    // const isSuccess = await gapi.deleteFile(book.id)\r\n    // if (isSuccess) {\r\n    //   store.books = store.books.filter((inner) => inner.id !== book.id)\r\n    // }\r\n    // return isSuccess\r\n  })\r\n\r\n  const store = observable({\r\n    books: [] as RemoteBook[],\r\n    isClientLoaded: false,\r\n    isLoggedIn: false,\r\n    isBooksLoading: false,\r\n    isUploading: false,\r\n    initLibrary,\r\n    uploadBookAction,\r\n    syncMetaAction,\r\n    downloadBookAction,\r\n    removeBookAction,\r\n    fetchBooksListAction,\r\n  })\r\n\r\n  return store\r\n}\r\nexport default React.createContext<any>({})\r\n","C:\\develop\\careful-reader\\src\\theme.ts",[],"C:\\develop\\careful-reader\\src\\types.ts",[],"C:\\develop\\careful-reader\\src\\uitls\\clientDB.ts",[],"C:\\develop\\careful-reader\\src\\uitls\\cloud.ts",[],"C:\\develop\\careful-reader\\src\\uitls\\common.ts",[],"C:\\develop\\careful-reader\\src\\uitls\\converter.ts",[],"C:\\develop\\careful-reader\\src\\uitls\\googleAPI.ts",["191"],"interface Files {\r\n  id: string\r\n}\r\nexport default class GAPI {\r\n  private googleDriveAPIDocument =\r\n    'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'\r\n  private scope = 'https://www.googleapis.com/auth/drive.appfolder'\r\n  private isGAPILoaded = false\r\n  constructor() {\r\n    if (\r\n      !process.env.REACT_APP_GOOGLE_API_KEY ||\r\n      !process.env.REACT_APP_GOOGLE_CLIENT_ID\r\n    ) {\r\n      console.error('Missing google API keys in .env file', process.env)\r\n    }\r\n  }\r\n  public async load() {\r\n    await this.loadGoogleAPI()\r\n    this.isGAPILoaded = true\r\n    return new Promise((resolve, reject) => {\r\n      if (window.gapi.client.drive) return resolve()\r\n      return window.gapi.client\r\n        .init({\r\n          apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n          clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\r\n          discoveryDocs: [this.googleDriveAPIDocument],\r\n          scope: this.scope,\r\n        })\r\n        .then(resolve)\r\n        .catch(reject)\r\n    })\r\n  }\r\n  public signIn() {\r\n    try {\r\n      return window.gapi.auth2.getAuthInstance().signIn()\r\n    } catch (e) {\r\n      return this.processError(e)\r\n    }\r\n  }\r\n  public signOut() {\r\n    try {\r\n      return window.gapi.auth2.getAuthInstance().signOut()\r\n    } catch (e) {\r\n      return this.processError(e)\r\n    }\r\n  }\r\n  public isLoggedIn() {\r\n    return (\r\n      this.isGAPILoaded &&\r\n      window.gapi.auth2.getAuthInstance() &&\r\n      window.gapi.auth2.getAuthInstance().isSignedIn.get()\r\n    )\r\n  }\r\n  public async list(query: string = '') {\r\n    let ret: any = []\r\n    try {\r\n      let token\r\n      do {\r\n        const resp: any = await this.callGapi(\r\n          window.gapi.client.drive.files.list,\r\n          {\r\n            spaces: 'appDataFolder',\r\n            fields: '*',\r\n            pageSize: 100,\r\n            pageToken: token,\r\n            orderBy: 'createdTime',\r\n            q: query,\r\n          }\r\n        )\r\n        ret = ret.concat(resp.result.files)\r\n        token = resp.result.nextPageToken\r\n      } while (token)\r\n\r\n      return ret\r\n    } catch (e) {\r\n      this.processError(e)\r\n      return ret\r\n    }\r\n  }\r\n  public async listFolders() {\r\n    return await this.list(`mimeType = 'application/vnd.google-apps.folder'`)\r\n  }\r\n  public async upload(fileId: string, content: string) {\r\n    try {\r\n      return this.callGapi(gapi.client.request, {\r\n        path: `/upload/drive/v3/files/${fileId}`,\r\n        method: 'PATCH',\r\n        params: { uploadType: 'media' },\r\n        body: typeof content === 'string' ? content : JSON.stringify(content),\r\n      })\r\n    } catch (e) {\r\n      this.processError(e)\r\n    }\r\n  }\r\n  public async download(fileId: string) {\r\n    const resp = await this.callGapi(gapi.client.drive.files.get, {\r\n      fileId: fileId,\r\n      alt: 'media',\r\n    })\r\n    return resp.result || resp.body\r\n  }\r\n  public async createFile(name: string, folderId?: string) {\r\n    const resp = await this.callGapi(gapi.client.drive.files.create, {\r\n      resource: {\r\n        name: name,\r\n        mimeType: 'text/plain',\r\n        parents: [folderId || 'appDataFolder'],\r\n      },\r\n      fields: 'id',\r\n    })\r\n    return resp.result\r\n  }\r\n  public async createFolder(name: string) {\r\n    const resp = await this.callGapi(gapi.client.drive.files.create, {\r\n      resource: {\r\n        name: name,\r\n        mimeType: 'application/vnd.google-apps.folder',\r\n        parents: ['appDataFolder'],\r\n      },\r\n      fields: 'id',\r\n    })\r\n    return resp.result\r\n  }\r\n  public async deleteFile(fileId: string) {\r\n    try {\r\n      await this.callGapi(gapi.client.drive.files.delete, {\r\n        fileId: fileId,\r\n      })\r\n      return true\r\n    } catch (err) {\r\n      if (err.status === 404) {\r\n        return false\r\n      }\r\n      throw err\r\n    }\r\n  }\r\n  private loadGoogleAPI() {\r\n    return new Promise((resolve, reject) => {\r\n      if (!window.gapi) return reject('google api is not loaded')\r\n      if (window.gapi.auth2) resolve(window.gapi.auth2)\r\n      window.gapi.load('auth2', () => resolve(window.gapi.auth2))\r\n    })\r\n  }\r\n\r\n  private callGapi<CallGAPI>(\r\n    gapiFn: any,\r\n    options: any\r\n  ): Promise<gapi.client.Response<Files>> {\r\n    return new Promise((resolve, reject) => {\r\n      return gapiFn(options).then(\r\n        (resp: any) => {\r\n          if (resp && (resp.status < 200 || resp.status > 299)) {\r\n            console.error('GAPI call returned bad status', resp)\r\n            reject(resp)\r\n          } else {\r\n            resolve(resp)\r\n          }\r\n        },\r\n        (err: any) => {\r\n          // this.processError(err)\r\n          return reject(err)\r\n        }\r\n      )\r\n    })\r\n  }\r\n  private processError(error: Error) {\r\n    console.error(error)\r\n  }\r\n}\r\n","C:\\develop\\careful-reader\\src\\uitls\\styler.ts",[],"C:\\develop\\careful-reader\\src\\uitls\\xsl.js",[],{"ruleId":"192","severity":1,"message":"193","line":11,"column":10,"nodeType":"194","messageId":"195","endLine":11,"endColumn":14},{"ruleId":"196","severity":1,"message":"197","line":28,"column":6,"nodeType":"198","endLine":28,"endColumn":8,"suggestions":"199"},{"ruleId":"196","severity":1,"message":"200","line":35,"column":6,"nodeType":"198","endLine":35,"endColumn":18,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":8,"column":25,"nodeType":"194","messageId":"204","endLine":8,"endColumn":32},{"ruleId":"192","severity":1,"message":"205","line":8,"column":56,"nodeType":"194","messageId":"195","endLine":8,"endColumn":63},{"ruleId":"192","severity":1,"message":"206","line":36,"column":11,"nodeType":"194","messageId":"195","endLine":36,"endColumn":15},{"ruleId":"192","severity":1,"message":"206","line":49,"column":13,"nodeType":"194","messageId":"195","endLine":49,"endColumn":17},{"ruleId":"196","severity":1,"message":"207","line":60,"column":6,"nodeType":"198","endLine":60,"endColumn":8,"suggestions":"208"},{"ruleId":"192","severity":1,"message":"209","line":8,"column":10,"nodeType":"194","messageId":"195","endLine":8,"endColumn":20},{"ruleId":"192","severity":1,"message":"210","line":48,"column":11,"nodeType":"194","messageId":"195","endLine":48,"endColumn":17},{"ruleId":"192","severity":1,"message":"211","line":145,"column":20,"nodeType":"194","messageId":"195","endLine":145,"endColumn":28},"@typescript-eslint/no-unused-vars","'Feed' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'libraryStore'. Either include it or remove the dependency array.","ArrayExpression",["212"],"React Hook useEffect has a missing dependency: 'fetchBooks'. Either include it or remove the dependency array.",["213"],"@typescript-eslint/no-redeclare","'Loading' is already defined.","redeclared","'Loading' is defined but never used.","'file' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bookId', 'currentBook.text', 'handleScroll', 'openBookAction', and 'restoreScrollPoition'. Either include them or remove the dependency array.",["214"],"'makeStyles' is defined but never used.","'result' is assigned a value but never used.","'CallGAPI' is defined but never used.",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},"Update the dependencies array to be: [libraryStore]",{"range":"221","text":"222"},"Update the dependencies array to be: [fetchBooks, isLoggedIn]",{"range":"223","text":"224"},"Update the dependencies array to be: [bookId, currentBook.text, handleScroll, openBookAction, restoreScrollPoition]",{"range":"225","text":"226"},[1114,1116],"[libraryStore]",[1268,1280],"[fetchBooks, isLoggedIn]",[2171,2173],"[bookId, currentBook.text, handleScroll, openBookAction, restoreScrollPoition]"]