{"version":3,"sources":["components/controls/back.svg","components/controls/home.svg","components/controls/settings.svg","uitls/converter.ts","uitls/xsl.js","uitls/common.ts","uitls/cloud.ts","store/AppStore.ts","uitls/clientDB.ts","store/LibraryStore.ts","store/RemoteLibraryStore.ts","store/RootStore.ts","components/controls/AuthButtons.tsx","components/loading/Loading.tsx","components/common/Header.tsx","hooks/UseDoubleClick.ts","components/common/BookItem.tsx","pages/shelves/Shelve.tsx","pages/shelves/RemoteShelve.tsx","pages/shelves/common.tsx","pages/shelves/LocalShelve.tsx","pages/shelves/Shelves.tsx","pages/shelves/index.ts","uitls/styler.ts","pages/reader/Reader.tsx","pages/reader/index.ts","static/page1.jpg","static/page2.jpg","static/page3.jpg","pages/settings/Settings.tsx","components/Notifications.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["convertWithXSL","text","xsl","parser","DOMParser","xsltProcessor","XSLTProcessor","xml","parseFromString","parsedXsl","window","importStylesheet","transformToFragment","document","getBookPreviewInfo","fb2Book","rawMeta","meta","textContent","JSON","parse","cover","defaultEncoding","isDefaultEncoding","encoding","getTextEncoding","RegExp","exec","includes","readFile","file","a","reader","FileReader","Promise","resolve","reject","onload","event","result","target","onerror","error","readAsText","importScript","src","script","createElement","body","appendChild","async","loaded","loadGapi","then","gapi","load","auth2","catch","console","isGAPILoaded","googleDriveAPIDocument","scope","client","init","apiKey","process","clientId","discoveryDocs","signIn","getAuthInstance","signOut","isLoggedIn","isSignedIn","get","folderMIME","create","spaces","type","name","folderId","log","mimeType","parents","promisify","drive","files","resource","fields","response","find","query","q","ret","list","pageSize","pageToken","token","orderBy","concat","nextPageToken","download","fileId","alt","resp","remove","delete","status","getOrCreate","exist","length","upload","content","request","path","method","params","uploadType","stringify","gapiFn","options","err","createInDrive","findInDrive","getOrCreateInDrive","uploadInDrive","folder","createInAppFolder","findInAppFolder","getOrCreateInAppFolder","uploadOnAppFolder","appFolder","foder","AppStore","rootStore","messages","defaultLocale","locale","wordsHighlight","dynamicTextOrientation","pageColor","pageBackgroundColor","isClientLoaded","isUseImageCover","imageCover","setLocale","action","Object","keys","Error","setImageCoverAction","image","getLocaleMessages","toggleHightligting","value","toggleDynamicTextOrientation","setPageColor","toggleUseImageCover","setPageBackgroundColorAction","signInAction","cloud","signOutAction","makeAutoObservable","this","globalIntlCache","createIntlCache","createIntl","ru_messages","en_messages","en","ru","x","DB_INDEX_NAME","DB_STORE_NAME","dbPromise","openDB","upgrade","db","oldVersion","createObjectStore","keyPath","autoIncrement","txPromise","transaction","libraryDB","getBookMeta","id","getAllMeta","getAll","getBookText","addBook","timestamp","Date","now","tx","objectStore","add","book","done","updateBookMeta","bookId","updatedProps","store","oldBook","updatedBook","put","clear","LibraryStore","isAddingBookInProcess","isFetchingBooksInProcess","books","lastBook","fetchBooksListAction","isBookExist","addBookAction","rawBookText","converter","newBook","push","notification","info","syncBookAction","rest","metaWithoutObserving","toJS","removeBookAction","bookIndex","indexOf","splice","updateBookPositionAction","positionElement","syncMetaAction","updateBookAction","bookProps","bookInStore","assign","openBookAction","all","prom","rawText","children","innerHTML","fetchBookTextAction","RemoteLibraryStore","isBooksLoading","isUploading","isDownloading","isBookRemoving","remoteFolderName","cloudAppFolder","cloudDrive","initLibrary","cloudFolderFiles","map","cloudFiles","contentPromises","fileMeta","uploadBookAction","currentFolder","currentFile","bookText","textFileId","updatedBookMeta","metaFileName","metaFileId","clientBook","b","downloadBookAction","forceBookRemove","cloudMetaFile","cloudFile","allSettled","index","promises","RootStore","appStore","libraryStore","remoteLibraryStore","notifications","message","RootStoreContext","createContext","observer","useContext","Button","onClick","color","Switcher","styled","div","props","switch","loading","LoadingLine","showLoading","LinearProgress","TopHeightWorkaround","Title","Typography","useStyles","makeStyles","width","menuButton","marginRight","title","flexGrow","className","classes","useState","isOpen","setIsOpen","pathname","useLocation","headTitle","toggleDrawer","state","key","AppBar","Toolbar","position","IconButton","edge","aria-label","Fragment","Drawer","anchor","open","onClose","role","onKeyDown","List","to","ListItem","button","ListItemIcon","ListItemText","primary","Divider","variant","AuthButtons","useDoubleClick","ref","latency","onSingleClick","onDoubleClick","useEffect","clickRef","current","clickCount","handleClick","e","setTimeout","addEventListener","removeEventListener","Container","Paper","Image","img","BookItem","buttonRef","useRef","elevation","Spacer","Shelve","actions","dialogBookClickHandler","isBookDialogOpenned","setIsBookDialogOpenned","selectedBook","setSelectedBook","handleDialogClose","handleDefaultAction","Box","display","justifyContent","flexWrap","bookClickHandler","Dialog","fullWidth","DialogTitle","DialogContent","Grid","container","justify","spacing","item","xs","noWrap","DialogActions","handler","handleBookAction","RemoteBooksList","collectBook","theme","right","bottom","fab","input","AddBookButton","useTheme","htmlFor","onChange","readFileContent","accept","Fab","component","LocalBooksList","history","useHistory","handleBookRead","Contaier","Content","FabsContainer","BottomMenu","BottomMenuHeight","Shelves","React","setValue","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","handleChangeIndex","fabs","icon","label","clickHandler","onChangeIndex","Zoom","in","timeout","style","transitionDelay","unmountOnExit","BottomNavigation","showLabels","BottomNavigationAction","getStyledElement","indexes","Array","sort","Math","random","split","word","join","wrapper","stylize","element","el","n","walk","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","textNodesUnder","forEach","textElement","styledTextElement","replaceWith","isOnScreen","screenContainerElement","viewportTop","scrollTop","viewportHeight","clientHeight","viewportBottom","top","offsetTop","height","PageCount","span","dfunc","func","waitFor","args","clearTimeout","debounce","fn","Reader","currentBookRef","numberOfcurrentPage","setNumberOfCurrentPage","currenPositionPercent","setCurrenPositionPercent","pagesCount","setPagesCount","showControls","setShowControls","textContainerRef","elementsForHightlightRef","setLoading","queryParams","useParams","parseInt","motionStyle","setMotionStyle","openedBook","getElementsForHightlight","getPagesCount","positions","querySelectorAll","o","getAttribute","restoreScrollPoition","openBook","handleScroll","useDebounce","dtoStyle","useEventListener","gamma","transform","bookTitle","elementsForHightlight","percent","scrollHeight","getPercentOfScroll","toFixed","round","getNumberOfCurrentPage","posElement","positionElementId","updateBookPosition","screenElement","allElements","onScreen","i","hightLightElementsOnScreen","positionId","toElement","querySelector","scrollIntoView","FormControlStyled","FormControl","CoverImage","intl","useIntl","handleInputChange","handlerName","handlerParams","checked","InputLabel","formatMessage","Select","labelId","MenuItem","FormLabel","FormControlLabel","control","Switch","PageCoverImage1","PageCoverImage2","PageCoverImage3","TextField","margin","Notifications","Notification","setOpen","handleClose","reason","removeNotification","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","App","fetchBooks","Provider","basename","exact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","app","ReactDOM","render","getElementById","URL","href","origin","fetch","contentType","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4eAAe,ICAA,ICAA,I,sECEf,SAASA,EAAeC,EAAcC,GACpC,IAAMC,EAAS,IAAIC,UACbC,EAAgB,IAAIC,cACpBC,EAAMJ,EAAOK,gBAAgBP,EAAM,YACnCQ,GAAY,IAAIC,OAAON,WAAYI,gBAAgBN,EAAK,YAE9D,OADAG,EAAcM,iBAAiBF,GACxBJ,EAAcO,oBAAoBL,EAAKM,UAGzC,SAASC,EAAmBC,GACjC,IAAMC,EAAUhB,EAAee,ECscnB,o3BDlcZ,MAAO,CAAEE,KAHID,EAAQE,YAAcC,KAAKC,MAAMJ,EAAQE,aAAe,GAGtDG,MAFErB,EAAee,ECdT,2wCDeAG,aASlB,IAAMI,EAAkB,OAElBC,EAAoB,SAACC,GAAD,OAC/BA,IAAaF,GAER,SAASG,EAAgBxB,GAI9B,QAHgB,IAAIyB,OAAO,kBACCC,KAAK1B,IAAS,IAAI,IAAM,IAErC2B,SAAS,gBAAwB,eACzCN,EEnBF,SAAeO,EAAtB,kC,4CAAO,WACLC,GADK,6BAAAC,EAAA,6DAELP,EAFK,+BAEcF,EAEbU,EAAS,IAAIC,WAJd,kBAKE,IAAIC,SAAQ,SAACC,EAASC,GAC3BJ,EAAOK,OAAS,SAACC,GAAW,IAAD,EACnBC,EAAM,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAOE,cAAV,aAAG,EAAeD,OAC9B,OAAIA,GAA4B,kBAAXA,EACZJ,EAAQI,GAEVH,EAAO,KAEhBJ,EAAOS,QAAU,SAACC,GAAD,OAAWN,EAAO,qBAAuBM,IAE1DV,EAAOW,WAAWb,EAAMN,OAfrB,4C,kEAkBA,WAA+BM,GAA/B,iBAAAC,EAAA,sEACcF,EAASC,GADvB,UACC7B,EADD,OAECuB,EAAWC,EAAgBxB,IAC7BsB,EAAkBC,GAHjB,yCAGmCvB,GAHnC,uBAIQ4B,EAASC,EAAMN,GAJvB,oF,sBAwBA,SAASoB,EAAaC,GAC3B,OAAO,IAAIX,SAAQ,SAACC,EAASC,GAC3B,IAAMU,EAASjC,SAASkC,cAAc,UAMtC,OALAlC,SAASmC,KAAKC,YAAYH,GAC1BA,EAAOT,OAASF,EAChBW,EAAOL,QAAUL,EACjBU,EAAOI,OAAQ,EACfJ,EAAOD,IAAMA,EACNA,KC3DX,IAAIM,GAAS,EACN,SAAeC,IAAtB,gC,8CAAO,sBAAArB,EAAA,0DACDoB,EADC,0CACc,GADd,gCAEEP,EAAa,iDACjBS,MAAK,WACJ,OAAO,IAAInB,SAAQ,SAACC,EAASC,GAAV,OACjB1B,OAAO4C,KAAKC,KAAK,SAAS,kBAAMpB,EAAQzB,OAAO4C,KAAKE,gBAGvDH,MAAK,WAEJ,OADAF,GAAS,KAGVM,OAAM,WACLC,QAAQhB,MAAM,gCAbb,4C,sBAiBP,IAAIiB,IAAe,EACbC,GACJ,6DACIC,GACJ,wFACK,SAAeN,KAAtB,gC,8CAAO,sBAAAxB,EAAA,0DACD4B,GADC,iEAECP,IAFD,gCAGE,IAAIlB,SAAQ,SAACC,EAASC,GAC3B,OAAO1B,OAAO4C,KAAKQ,OAChBC,KAAK,CACJC,OAAQC,0CACRC,SAAUD,2EACVE,cAAe,CAACP,IAChBC,MAAOA,KAERR,MAAK,kBAAOM,IAAe,KAC3BN,KAAKlB,GACLsB,MAAMrB,OAbN,4C,sBAiBA,SAAegC,KAAtB,gC,8CAAO,sBAAArC,EAAA,sEACCwB,KADD,yCAGI7C,OAAO4C,KAAKE,MAAMa,kBAAkBD,UAHxC,gCAKHV,QAAQhB,MAAM,kBAAd,MALG,yD,sBASA,SAAe4B,KAAtB,gC,8CAAO,sBAAAvC,EAAA,sEACCwB,KADD,yCAGI7C,OAAO4C,KAAKE,MAAMa,kBAAkBC,WAHxC,gCAKHZ,QAAQhB,MAAM,mBAAd,MALG,yD,sBASA,SAAe6B,KAAtB,gC,8CAAO,sBAAAxC,EAAA,sEACCwB,KADD,yCAID7C,OAAO4C,KAAKE,MAAMa,mBAClB3D,OAAO4C,KAAKE,MAAMa,kBAAkBG,WAAWC,OAL9C,uCAQHf,QAAQhB,MAAM,sBAAd,MARG,mBASI,GATJ,0D,sBAYP,IAAMgC,GAAa,qCAGbC,GAAS,SAACC,GAAD,OAAoB,SAACC,GAAD,8CAAkB,WACnDC,EACAC,GAFmD,mBAAAhD,EAAA,6DAInD2B,QAAQsB,IAAIJ,EAAQC,EAAMC,EAAMC,GAC1BE,EAAoB,WAATJ,EAAoBH,GAPtB,aAQTQ,EAAUH,EAAW,CAACA,GAAuB,UAAXH,EAAqB,GAAK,CAACA,GANhB,SAO5BO,GAAU7B,KAAKQ,OAAOsB,MAAMC,MAAMV,OAAQ,CAC/DW,SAAU,CACRR,OACAG,WACAC,WAEFK,OAAQ,MAbyC,cAO7CC,EAP6C,yBAe5CA,EAASjD,QAfmC,2CAAlB,0DAkB7BkD,GAAO,SAACb,GAAD,OAAoB,SAACC,GAAD,8CAAkB,WAAOa,GAAP,uBAAA3D,EAAA,sDAC3CkD,EACK,WAATJ,EAAA,0BACuBH,GADvB,mCAE2BA,GAF3B,KAGIiB,EAL2C,UAKpCD,EALoC,YAK3BT,GAClBW,EAAW,GANkC,gCAUjBT,GAC1BzE,OAAO4C,KAAKQ,OAAOsB,MAAMC,MAAMQ,KAC/B,CACEjB,SACAW,OAAQ,IACRO,SAAU,IACVC,UAAWC,EACXC,QAAS,cACTN,MAlByC,OAUvCH,EAVuC,OAqB7CI,EAAMA,EAAIM,OAAOV,EAASjD,OAAO8C,OACjCW,EAAQR,EAASjD,OAAO4D,cAtBqB,UAuBtCH,EAvBsC,iDAyBxCJ,GAzBwC,kCA2B/ClC,QAAQhB,MAAM,yCAA0CgD,EAAxD,MA3B+C,0DAAlB,wDA+B3BU,GAAQ,uCAAG,WAAOC,GAAP,eAAAtE,EAAA,sEACIoD,GAAU7B,KAAKQ,OAAOsB,MAAMC,MAAMZ,IAAK,CACxD4B,OAAQA,EACRC,IAAK,UAHQ,cACTC,EADS,yBAMRA,EAAKvD,MANG,2CAAH,sDAQRwD,GAAM,uCAAG,WAAOH,GAAP,SAAAtE,EAAA,+EAELoD,GAAU7B,KAAKQ,OAAOsB,MAAMC,MAAMoB,OAAQ,CAC9CJ,OAAQA,IAHC,iCAKJ,GALI,mCAOQ,MAAf,KAAIK,OAPG,2CAQF,GARE,4EAAH,sDAcNC,GAAc,SAAC/B,GAAD,OAAoB,SAACC,GAAD,8CAAkB,WACxDc,EACAb,EACAC,GAHwD,eAAAhD,EAAA,sEAKpC0D,GAAKb,EAALa,CAAaZ,EAAbY,CAAmBE,GALiB,YAKlDiB,EALkD,QAM3CC,OAN2C,qBAMlCD,EANkC,uCAMnBjC,GAAOC,EAAPD,CAAeE,EAAfF,CAAqBG,EAAMC,GANR,kHAAlB,4DASlC+B,GAAS,SAAClC,GAAD,8CAAoB,WAAOyB,EAAgBU,GAAvB,eAAAhF,EAAA,+EAEHoD,GAAU7B,KAAKQ,OAAOkD,QAAS,CACzDpC,OAAmB,UAAXA,EAAqB,GAAK,CAACA,GACnCqC,KAAK,0BAAD,OAA4BZ,GAChCa,OAAQ,QACRC,OAAQ,CAAEC,WAAY,SACtBpE,KAAyB,kBAAZ+D,EAAuBA,EAAU5F,KAAKkG,UAAUN,KAPhC,cAEzBvB,EAFyB,yBASxBA,EAASjD,QATe,gCAW/BmB,QAAQhB,MAAM,2BAA4B2D,EAAQU,EAAlD,MAX+B,yDAApB,yDAef,SAAS5B,GACPmC,EACAC,GAEA,OAAO,IAAIrF,SAAQ,SAACC,EAASC,GAC3B,OAAOkF,EAAOC,GAASlE,MACrB,SAACkD,GACKA,IAASA,EAAKG,OAAS,KAAOH,EAAKG,OAAS,MAC9ChD,QAAQhB,MAAM,gCAAiC6D,GAC/CnE,EAAOmE,IAEPpE,EAAQoE,MAGZ,SAACiB,GACC,OAAOpF,EAAOoF,SAMtB,IAAMC,GAAgB9C,GAAO,SACvB+C,GAAcjC,GAAK,SACnBkC,GAAqBhB,GAAY,SACjCiB,GAAgBd,GAAO,SAChB1B,GAAQ,CACnBuB,YAAa,CACXkB,OAAQF,GAAmB,UAC3B7F,KAAM6F,GAAmB,SAE3BhD,OAAQ,CACNkD,OAAQJ,GAAc,UACtB3F,KAAM2F,GAAc,SAEtBhC,KAAM,CACJoC,OAAQH,GAAY,UACpB5F,KAAM4F,GAAY,SAEpBZ,OAAQc,GACRxB,YACAI,WAGIsB,GAAoBnD,GAAO,iBAC3BoD,GAAkBtC,GAAK,iBACvBuC,GAAyBrB,GAAY,iBACrCsB,GAAoBnB,GAAO,iBACpBoB,GAAY,CACvBvB,YAAa,CACXwB,MAAOH,GAAuB,UAC9BlG,KAAMkG,GAAuB,SAE/BrD,OAAQ,CACNkD,OAAQC,GAAkB,UAC1BhG,KAAMgG,GAAkB,SAE1BrC,KAAM,CACJoC,OAAQpC,GAAK,UACb3D,KAAMiG,GAAgB,SAExBjB,OAAQmB,GACR7B,YACAI,WCnOmB4B,GAgBnB,WAAYC,GAAuB,IAAD,gCAflCA,eAekC,OAdlCC,cAckC,OAXlCC,cANqB,KAiBa,KAVlCC,OAPqB,KAiBa,KATlCC,gBAA0B,EASQ,KARlCC,wBAAkC,EAQA,KAPlCC,UAAoB,QAOc,KANlCC,oBAA8B,QAMI,KALlCrE,YAAsB,EAKY,KAJlCsE,gBAA0B,EAIQ,KAHlCC,iBAA2B,EAGO,KAFlCC,WAAqB,IAEa,KAsBlCC,UAAYC,aAAO,SAACT,GAClB,IAAIU,OAAOC,KAAK,EAAKb,UAAU1G,SAAS4G,GAGtC,MAAMY,MAAM,sBAFZ,EAAKZ,OAASA,KAxBgB,KA8BlCa,oBAAsBJ,aAAO,SAACK,GAAD,OAAoB,EAAKP,WAAaO,KA9BjC,KAgClCC,kBAAoBN,aAAO,WACzB,IAAMT,EAAS,EAAKA,OACpB,OAAO,EAAKF,SAASE,MAlCW,KAqClCgB,mBAAqBP,aAAO,SAACQ,GAC3B,EAAKhB,eAAiBgB,KAtCU,KAyClCC,6BAA+BT,aAAO,SAACQ,GACrC,EAAKf,uBAAyBe,KA1CE,KA6ClCE,aAAeV,aAAO,SAACQ,GACrB,EAAKd,UAAYc,KA9Ce,KAiDlCG,oBAAsBX,aAAO,SAACQ,GAC5B,EAAKX,gBAAkBW,KAlDS,KAqDlCI,6BAA+BZ,aAAO,SAACQ,GACrC,EAAKb,oBAAsBa,KAtDK,KAyDlCK,aAAeb,YAAM,sBAAC,sBAAAlH,EAAA,sEACdgI,KADc,uBAEIA,KAFJ,OAEpB,EAAKxF,WAFe,mDAzDY,KA8DlCyF,cAAgBf,YAAM,sBAAC,sBAAAlH,EAAA,sEACfgI,KADe,uBAEGA,KAFH,OAErB,EAAKxF,WAFgB,mDA7DrB0F,YAAmBC,MACnBA,KAAK7B,UAAYA,EACjB,IAAM8B,EAAkBC,cAExBC,YAAW,CAAE7B,OAAQ,KAAMF,SAAUgC,GAAeH,GACpDE,YAAW,CAAE7B,OAAQ,KAAMF,SAAUiC,GAAeJ,GAEpDD,KAAK3B,cAAgB,KACrB2B,KAAK5B,SAAW,CACdkC,GAAID,EACJE,GAAIH,GAKNP,KAAa1G,MAAK,SAACqH,GACjB,EAAK7B,gBAAiB,EACtBkB,KAAmB1G,MAAK,SAACkB,GAAD,OAAiB,EAAKA,WAAaA,S,4BCtC3DoG,GAAgB,QAChBC,GAAgB,QAahBC,GAAYC,aAfF,UADG,EAgBsC,CACvDC,QADuD,SAC/CC,EAAIC,GACNA,EAAa,IACfD,EAAGE,kBAAkBP,GAAe,CAAEQ,QAAS,OAC/CH,EAAGE,kBAAkBN,GAAe,CAAEQ,eAAe,QAKrDC,GAAS,uCAAG,sBAAAtJ,EAAA,sEACT8I,GADS,uCACES,YAAY,CAACX,GAAeC,IAAgB,cAD9C,2CAAH,qDAmDAW,GAhDG,CACVC,YADU,SACEC,GAAa,OAAD,oHACdZ,GADc,uCACHpG,IAAIkG,GAAec,IADhB,8CAGxBC,WAJU,WAII,OAAD,oHACHb,GADG,uCACQc,OAAOhB,KADf,8CAGbiB,YAPU,SAOEH,GAA8B,OAAD,0HACjBZ,GADiB,8BACNpG,IAAImG,GAAea,GADb,UACvClJ,EADuC,6BAGrC6G,MAAM,qBAAD,OAAsBqC,EAAtB,sBAHgC,gCAKpClJ,GALoC,+CAQzCsJ,QAfU,SAeF5K,GAA8C,IAAD,4IAAlC+B,EAAkC,+BAAnB,GAChC8I,EAAYC,KAAKC,MADkC,SAExCX,KAFwC,cAEnDY,EAFmD,gBAGxCA,EAAGC,YAAYtB,IAAeuB,IAAInJ,GAHM,cAGnDyI,EAHmD,OAInDW,EAJmD,6BAIjCnL,GAJiC,IAI3BwK,KAAIK,cAJuB,UAMnDG,EAAGC,YAAYvB,IAAewB,IAAIC,GANiB,yBAOnDH,EAAGI,KAPgD,iCAQlDD,GARkD,+CAUrDE,eAzBU,SAyBKC,EAAgBC,GAAoB,OAAD,gIACrCnB,KADqC,cAChDY,EADgD,OAEhDQ,EAAQR,EAAGC,YAAYvB,IAFyB,SAGhC8B,EAAMhI,IAAI8H,GAHsB,cAGhDG,EAHgD,OAIhDC,EAJgD,6BAI7BD,GAAYF,GAJiB,UAKhDC,EAAMG,IAAID,GALsC,yBAMhDV,EAAGI,KAN6C,iCAO/CM,GAP+C,+CASlDlG,OAlCU,SAkCH8F,GAAiB,OAAD,0HACVlB,KADU,cACrBY,EADqB,gBAErBA,EAAGC,YAAYvB,IAAelE,OAAO8F,GAFhB,uBAGrBN,EAAGC,YAAYtB,IAAenE,OAAO8F,GAHhB,uBAIrBN,EAAGI,KAJkB,8CAMvBQ,MAxCU,WAwCD,OAAD,0HACKxB,KADL,cACNY,EADM,gBAENA,EAAGC,YAAYvB,IAAekC,QAFxB,uBAGNZ,EAAGC,YAAYtB,IAAeiC,QAHxB,uBAINZ,EAAGI,KAJG,+CC3DHS,GAQX,WAAYzE,GAAuB,IAAD,gCAP3B0E,uBAAwB,EAOG,KAN3BC,0BAA2B,EAMA,KAL3BC,MAAkB,GAKS,KAJ3BC,cAI2B,OAF1B7E,eAE0B,OAIlC8E,qBAAuBlE,YAAM,sBAAC,sBAAAlH,EAAA,6DAC5B,EAAKiL,0BAA2B,EADJ,SAETzB,GAAUG,aAFD,OAE5B,EAAKuB,MAFuB,OAG5B,EAAKD,0BAA2B,EAHJ,4CAJI,KAUlCI,YAAc,SAACtI,GAAD,OACZ,EAAKmI,MAAMxH,MAAK,SAAC2G,GAAD,OAAgBA,EAAKtH,OAASA,MAXd,KAalCuI,cAAgBpE,YAAM,uCAAC,WAAOqE,EAAqBxI,GAA5B,uBAAA/C,EAAA,+DACGwL,EAA6BD,GAA7CjM,EADa,EACbA,MAAOJ,EADM,EACNA,KACTuM,EAAU,CACd1I,OACA7D,OACAI,SAGF,EAAK0L,uBAAwB,EARR,SASFxB,GAAUM,QAAQ2B,EAASF,GATzB,OASflB,EATe,OAUrB,EAAKa,MAAMQ,KAAKrB,GAChB,EAAKW,uBAAwB,EAC7B,EAAK1E,UAAUqF,aAAaC,KAAK,uBAZZ,2CAAD,yDAbY,KA4BlCC,eAAiB3E,YAAM,uCAAC,WAAOhI,EAAY+B,GAAnB,mBAAAjB,EAAA,6DACEd,EAAhBwK,GAAOoC,EADO,aACE5M,EADF,SAEhB6M,EAAuBC,YAAKF,IACb5M,KAAO8M,YAAKD,EAAqB7M,MAHhC,SAIHsK,GAAUM,QAAQiC,EAAsB9K,GAJrC,OAIhBoJ,EAJgB,OAKtB,EAAKa,MAAMQ,KAAKrB,GALM,2CAAD,yDA5BW,KAoClC4B,iBAAmB/E,YAAM,uCAAC,WAAOmD,GAAP,eAAArK,EAAA,yDACnBqK,EADmB,iEAElBb,GAAU9E,OAAO2F,EAAKX,IAFJ,OAGlBwC,EAAY,EAAKhB,MAAMiB,QAAQ9B,GACrC,EAAKa,MAAMkB,OAAOF,EAAW,GAC7B,EAAK5F,UAAUqF,aAAaC,KAAK,yBALT,2CAAD,uDApCS,KA4ClCS,yBAA2BnF,YAAM,uCAC/B,WAAOmD,EAAYiC,GAAnB,eAAAtM,EAAA,6DACQwK,EAASH,EAAKX,GADtB,SAEQF,GAAUe,eAAeC,EAAQ,CAAE8B,oBAF3C,cAGEjC,EAAKiC,gBAAkBA,EAHzB,SAIQ,EAAKhG,UAAUiG,eAAelC,GAJtC,2CAD+B,yDA5CC,KAqDlCmC,iBAAmBtF,YAAM,uCAAC,WAAOsD,EAAgBiC,GAAvB,eAAAzM,EAAA,6DAClB0M,EAAc,EAAKxB,MAAMxH,MAAK,SAAC2G,GAAD,OAAUA,EAAKX,KAAOc,OAExDrD,OAAOwF,OAAOD,EAAaD,GAHL,SAKlBjD,GAAUe,eAAeC,EAAQiC,GALf,2CAAD,yDArDS,KA6DlCG,eAAiB1F,YAAM,uCACrB,WAAOsD,GAAP,SAAAxK,EAAA,0DACM,EAAKmL,UAAY,EAAKA,SAASS,KAAKlC,KAAOc,EADjD,iCAGahB,GAAUC,YAAYe,GAHnC,gDAG+C,EAAKW,SAASS,KAH7D,cAEI,EAAKT,SAASS,KAFlB,uBAIWzL,QAAQC,QAAQ,EAAK+K,WAJhC,iCAMWhL,QAAQ0M,IAAI,CACjBrD,GAAUC,YAAYe,GACtBhB,GAAUK,YAAYW,KACrBlJ,MAAK,SAACwL,GACP,IAAMlB,EAAOkB,EAAK,GACZC,EAAUD,EAAK,IAAM,GACrB5O,EN1EDD,EM0EmC8O,ELjErC,6+fDRCC,SAAS,GAAGC,WAAa,GM+E7B,OAJA,EAAK9B,SAAW,CACdS,OACA1N,QAEK,EAAKiN,aAlBlB,4CADqB,uDA7DW,KAsFlC+B,oBAAsBhG,YAAM,uCAC1B,WAAOsD,GAAP,SAAAxK,EAAA,sEAAgCwJ,GAAUK,YAAYW,GAAtD,mFAD0B,uDArF1BtC,YAAmBC,MACnBA,KAAK7B,UAAYA,GChBA6G,GAcnB,WAAY7G,GAAuB,IAAD,gCAblC4E,MAAgB,GAakB,KAZlCpE,gBAAiB,EAYiB,KAXlCtE,YAAa,EAWqB,KAVlC4K,gBAAiB,EAUiB,KATlCC,aAAc,EASoB,KARlCC,eAAgB,EAQkB,KAPlCC,gBAAiB,EAOiB,KAL1BC,iBAAmB,iBAKO,KAJ1BC,eAAiBzF,GAIS,KAH1B0F,WAAa1F,GAGa,KAF1B1B,eAE0B,OAQlCqH,YAAczG,YAAM,sBAAC,sBAAAlH,EAAA,sDACnBgI,GAAYpF,OAAOkD,OAAO,gBADP,4CARa,KAYlCsF,qBAAuBlE,YAAM,sBAAC,gCAAAlH,EAAA,sEAE1B,EAAKoN,gBAAiB,EAFI,SAIK,EAAKM,WAAWhK,KAAK3D,KAArB,wBAJL,cAIpB6N,EAJoB,OAO1BjM,QAAQsB,IAAI,OAAQ2K,GACpBA,EAAiBC,KAAI,SAAC9N,GAAD,OAAeA,EAAKgD,QARf,SASD,EAAK0K,eAAe/J,KAAK3D,KAAzB,8BATC,cASpB+N,EAToB,OAYpBC,EAAkBD,EAAWD,KAAI,SAACG,GAAD,OACrC,EAAKP,eAAepJ,SAAS2J,EAAStE,IAAIpI,MAAK,SAAC0D,GAE9C,IAAMqF,EAAajL,KAAKC,MAAM2F,GAE9B,EAAKkG,MAAMQ,KAAKrB,SAGpB,EAAKa,MAAQ,GApBa,UAqBpB/K,QAAQ0M,IAAIkB,GArBQ,QAsB1BpM,QAAQsB,IAAI,eAAgB,EAAKiI,OAtBP,kDAwB1B,EAAK5E,UAAUqF,aAAahL,MAAM,+BAxBR,yBA0B1B,EAAKyM,gBAAiB,EA1BI,8EAZI,KA0ClCa,iBAAmB/G,YAAM,uCAAC,WAAOmD,GAAP,iCAAArK,EAAA,yDACnBqK,EADmB,iEAGtB,EAAKgD,aAAc,EAHG,SAIQ,EAAKK,WAAW9I,YAAYkB,OAA5B,kBACjB,EAAK0H,iBADY,KAE5B,EAAKA,kBANe,0CAIfU,EAJe,eAQM,EAAKR,WAAW9I,YAAY7E,KAA5B,kBACfsK,EAAKtH,KADU,kBACImL,EAAcxE,GADlB,gBAE1BW,EAAKtH,KACLmL,EAAcxE,IAXM,2CAQfyE,EARe,eAaC3E,GAAUK,YAAYQ,EAAKX,IAb5B,eAahB0E,EAbgB,iBAcW,EAAKV,WAAW3I,OAC/CoJ,EAAYzE,GACZ0E,GAhBoB,wBAcVC,EAdU,EAcd3E,GAdc,UAkBQF,GAAUe,eAAeF,EAAKX,GAAI,CAC9D2E,eAnBoB,eAkBhBC,EAlBgB,OAsBtBjE,EAAKgE,WAAaA,EAClB1M,QAAQsB,IAAI,OAAQoH,GACpB,EAAKa,MAAMQ,KAAKrB,GAChB,EAAK/D,UAAUqF,aAAaC,KAAK,kBAzBX,kBA0Bf0C,GA1Be,kCA4BtB,EAAKhI,UAAUqF,aAAahL,MAAM,gBA5BZ,yBA8BtB,EAAK0M,aAAc,EA9BG,6EAAD,uDA1CS,KA4ElCd,eAAiBrF,YAAM,uCAAC,WAAOmD,GAAP,6BAAArK,EAAA,yDACjBqK,EADiB,wDAEtB1I,QAAQsB,IAAI,mBAAoBoH,GAFV,SAIdkE,EAAelE,EAAKtH,KAAO,aAJb,SAKQ,EAAK0K,eAAe7I,YAAY7E,KAAhC,kBACfwO,EADe,KAE1BA,GAPkB,0CAKbJ,EALa,eASa,EAAKV,eAAe1I,OACnDoJ,EAAYzE,GACZtK,KAAKkG,UAAU+E,IAXG,wBASRmE,EATQ,EASZ9E,GATY,UAaCF,GAAUe,eAAeF,EAAKX,GAAI,CAAE8E,eAbrC,eAadhO,EAbc,QAcdiO,EAAa,EAAKvD,MAAMxH,MAAK,SAACgL,GAAD,OAAOA,EAAE3L,OAASsH,EAAKtH,SAExDoE,OAAOwF,OAAO8B,EAAYpE,GAE1B,EAAKa,MAAMQ,KAAKrB,GAlBE,kBAoBb7J,GApBa,kCAsBpB,EAAK8F,UAAUqF,aAAahL,MAAM,cAtBd,sGAAD,uDA5EW,KAuGlCgO,mBAAqBzH,YAAM,uCAAC,WAAOmD,GAAP,eAAArK,EAAA,yDACrBqK,EADqB,oDAEtB7J,EAAS,GAFa,SAIxB,EAAK8M,eAAgB,GACjBjD,EAAKgE,WALe,wBAMtB,EAAK/H,UAAUqF,aAAaC,KAAK,mBANX,SAOP,EAAK8B,WAAWrJ,SAASgG,EAAKgE,YAPvB,OAOtB7N,EAPsB,gCASlB,EAAK8F,UAAUuF,eAAexB,EAAM7J,GATlB,iCAWjBA,GAXiB,yCAaxBmB,QAAQhB,MAAR,MACA,EAAK2F,UAAUqF,aAAahL,MAAM,kBAdV,kBAejBH,GAfiB,yBAiBxB,EAAK8M,eAAgB,EAjBG,6EAAD,uDAvGO,KA4HlCsB,gBA5HkC,uCA4HhB,WAAOvE,GAAP,iBAAArK,EAAA,sEACY,EAAKyN,eAAe/J,KAC7C3D,KADyB,kBACTsK,EAAKtH,KADI,gBAEzBzB,MAAK,gBAAEvB,EAAF,2BAAgB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM2J,KAAM,EAAK+D,eAAehJ,OAAO1E,EAAK2J,OAHhD,cACVmF,EADU,gBAKQ,EAAKnB,WAAWhK,KACrC3D,KADqB,kBACLsK,EAAKtH,KADA,MAErBzB,MAAK,gBAAGvB,EAAH,EAAGA,KAAH,OAAkB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM2J,KAAM,EAAKgE,WAAWjJ,OAAO1E,EAAK2J,OAP9C,cAKVoF,EALU,yBAST3O,QAAQ4O,WAAW,CAACD,EAAWD,KATtB,2CA5HgB,2DAwIlC5C,iBAAmB/E,YAAM,uCAAC,WAAOmD,GAAP,iBAAArK,EAAA,yDACnBqK,EADmB,6DAGtB,EAAKkD,gBAAiB,GAChByB,EAAQ,EAAK9D,MAAMiB,QAAQ9B,KACpB,GACX,EAAKa,MAAMkB,OAAO4C,EAAO,GAEtB3E,EAAKmE,YAAenE,EAAKgE,WARR,iCASd,EAAKO,gBAAgBvE,GATP,sCAWd4E,EAAW,GAEjB5E,EAAKgE,YACHY,EAASvD,KAAK,EAAKgC,WAAWjJ,OAAO4F,EAAKgE,aAC5ChE,EAAKmE,YACHS,EAASvD,KAAK,EAAK+B,eAAehJ,OAAO4F,EAAKmE,aAhB5B,UAiBdrO,QAAQ4O,WAAWE,GAjBL,QAmBtB,EAAK3I,UAAUqF,aAAaC,KAAK,sBAnBX,kDAqBtB,EAAKtF,UAAUqF,aAAahL,MAAM,qBArBZ,yBAuBtB,EAAK4M,gBAAiB,EAvBA,6EAAD,uDAvIvBrF,YAAmBC,MACnBA,KAAK7B,UAAYA,EACjB0B,KAAa1G,MAAK,WAChB,EAAKwF,gBAAiB,EACtBkB,KAAmB1G,MAAK,SAACkB,GAAD,OAAiB,EAAKA,WAAaA,SCdpD0M,GAAb,WAmBE,aAAe,IAAD,gCAlBdC,cAkBc,OAjBdC,kBAiBc,OAhBdC,wBAgBc,OAfdC,cAAiC,GAenB,KAdP3D,aAAe,CACpBC,KAAM1E,aAAO,SAACqI,GACZ,EAAKD,cAAc5D,KAAK,CAAE6D,UAASzM,KAAM,YAE3CnC,MAAOuG,aAAO,SAACqI,GACb,EAAKD,cAAc5D,KAAK,CAAE6D,UAASzM,KAAM,cAS/B,KANdyJ,eAAiBrF,YAAM,uCAAC,WAAOmD,GAAP,SAAArK,EAAA,sEACT,EAAKqP,mBAAmB9C,eAAelC,GAD9B,mFAAD,uDAMT,KAHdwB,eAAiB3E,YAAM,uCAAC,WAAOmD,EAAYpJ,GAAnB,SAAAjB,EAAA,sEACT,EAAKoP,aAAavD,eAAexB,EAAMpJ,GAD9B,mFAAD,yDAIrBiH,YAAmBC,MACnBA,KAAKgH,SAAW,IAAI9I,GAAS8B,MAC7BA,KAAKkH,mBAAqB,IAAIlC,GAAmBhF,MACjDA,KAAKiH,aAAe,IAAIrE,GAAa5C,MAvBzC,+DA0BqB6G,GACjB7G,KAAKmH,cAAclD,OAAO4C,EAAO,OA3BrC,KA+BaQ,GAAmBC,wBAAyB,ICpC1CC,gBAAS,WAAyB,IACvCP,EAAaQ,qBAAWH,IAAxBL,SAENrI,EAIEqI,EAJFrI,eACAtE,EAGE2M,EAHF3M,WACAuF,EAEEoH,EAFFpH,aACAE,EACEkH,EADFlH,cAGF,OACE,mCACGnB,GACC,mCACGtE,EACC,cAACoN,EAAA,EAAD,CAAQC,QAAS5H,EAAe6H,MAAM,UAAtC,oBAIE,cAACF,EAAA,EAAD,CAAQC,QAAS9H,EAAc+H,MAAM,UAArC,0B,sHCdd,IAAMC,GAAWC,KAAOC,IAAV,MACD,SAACC,GAAD,OAAYA,EAAMC,OAAS,QAAU,UAMnCT,gBAAS,YAAmD,IAAhCU,EAA+B,EAA/BA,QAASpD,EAAsB,EAAtBA,SAClD,OACE,qCACE,cAAC+C,GAAD,CAAUI,OAAQC,EAAlB,SACE,4CAEDpD,QAKMqD,GAAcX,aAAS,WAAO,IAAD,EACKC,qBAAWH,IAAhDJ,EADgC,EAChCA,aAAcC,EADkB,EAClBA,mBAChBiB,EAAcjB,EAAmBjC,gBAClCiC,EAAmBhC,aACnBgC,EAAmB/B,eACnB+B,EAAmB9B,gBACnB6B,EAAapE,uBACboE,EAAanE,yBAEhB,OAAQ,mCAAGqF,GAAe,cAACC,GAAA,EAAD,S,kPCd9B,IAAMC,GAAsBR,KAAOC,IAAV,MACnBQ,GAAQT,aAAOU,IAAPV,CAAH,MAMLW,GAAYC,YAAW,CAC3B9M,KAAM,CACJ+M,MAAO,KAETC,WAAY,CACVC,YAAa,IAEfC,MAAO,CACLC,SAAU,KAICvB,gBAAS,YAA2D,IAAzC1C,EAAwC,EAAxCA,SAA0BgE,GAAc,EAA9BE,UAA8B,EAAdF,OAC5DG,EAAUR,KADgE,EAEpDS,oBAAS,GAF2C,mBAEzEC,EAFyE,KAEjEC,EAFiE,KAQ1EC,EALWC,cAKiBD,UAAY,GACxCE,EAAYT,GALQ,CACxB,IAAK,UACL,YAAa,YAGyBO,GACjBpG,EAAcwE,qBAAWH,IAAxCJ,aAAejE,SAEjBuG,EAAe,SAACC,GAAD,OAAoB,SAACpR,IAEvB,YAAfA,EAAMuC,MACS,QAAdvC,EAAMqR,KAA+B,UAAdrR,EAAMqR,MAIhCN,EAAUK,KAyCZ,OACE,qCACE,eAACnB,GAAD,WACE,cAACqB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,OAEF,eAACD,EAAA,EAAD,CAAQE,SAAS,QAAjB,UACE,eAACD,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CACEC,KAAK,QACLf,UAAWC,EAAQL,WACnBhB,MAAM,UACNoC,aAAW,OAJb,SAME,eAAC,IAAMC,SAAP,WACE,cAAC,IAAD,CAAUtC,QAAS6B,GAAa,KAChC,cAACU,EAAA,EAAD,CAAQC,OAAO,OAAOC,KAAMjB,EAAQkB,QAASb,GAAa,GAA1D,SAvDC,wBACX,sBACER,UAAWC,EAAQrN,KACnB0O,KAAK,eACL3C,QAAS6B,GAAa,GACtBe,UAAWf,GAAa,GAJ1B,UAME,eAACgB,EAAA,EAAD,YACW,OAARvH,QAAQ,IAARA,GAAA,UAAAA,EAAUS,YAAV,eAAgB1M,OACf,cAAC,IAAD,CAAMyT,GAAE,gBAAWxH,EAASS,KAAKlC,IAAjC,SACE,eAACkJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAS7H,EAASS,KAAK1M,KAAK8R,aAIhD,cAAC,IAAD,CAAM2B,GAAG,IAAT,SACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,cAI1B,cAAC,IAAD,CAAML,GAAG,YAAT,SACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,qBAI5B,cAACC,EAAA,EAAD,OAoBWnP,UAIP,cAAC2M,GAAD,CAAOyC,QAAQ,KAAf,SACGzB,IAEFzE,EACD,cAACmG,GAAD,OAEF,cAAC9C,GAAD,a,UC9FO+C,GA3BQ,SAAC,GAKK,IAJ3BC,EAI0B,EAJ1BA,IAI0B,IAH1BC,eAG0B,MAHhB,IAGgB,EAF1BC,EAE0B,EAF1BA,cACAC,EAC0B,EAD1BA,cAEAC,qBAAU,WACR,IAAMC,EAAWL,EAAIM,QACjBC,EAAa,EACXC,EAAc,SAACC,GACnBF,GAAc,EAEdG,YAAW,WACU,IAAfH,EAAkBL,GAAiBA,EAAcO,GAC7B,IAAfF,GAAkBJ,GAAiBA,EAAcM,GAE1DF,EAAa,IACZN,IAIL,OADQ,OAARI,QAAQ,IAARA,KAAUM,iBAAiB,QAASH,GAC7B,WACG,OAARH,QAAQ,IAARA,KAAUO,oBAAoB,QAASJ,Q,qZCvB7C,IAAMK,GAAYlE,aAAOmE,KAAPnE,CAAH,MAYToE,GAAQpE,KAAOqE,IAAV,MAqCIC,GA1BE5E,aACf,YAA+E,IAA5ErF,EAA2E,EAA3EA,KAAM2C,EAAqE,EAArEA,SAAUuG,EAA2D,EAA3DA,cAAeC,EAA4C,EAA5CA,cAC1Be,GADsE,oEAC1DC,oBASlB,OAPApB,GAAe,CACbG,gBACAC,gBACAH,IAAKkB,EACLjB,QAAS,MAIT,eAACY,GAAD,CAAWO,UAAW,EAAGpB,IAAKkB,EAA9B,UACGvH,EACA3C,EAAK/K,MACJ,mCACE,cAAC8U,GAAD,CAAOtT,IAAKuJ,EAAK/K,MAAOiF,IAAI,OAG5B,8BAAM8F,EAAKtH,a,sKCjCvB,IAAM2R,GAAS1E,KAAOC,IAAV,MAsFG0E,GAvEAjF,aACb,YAA0D,IAAvDxE,EAAsD,EAAtDA,MAAO0J,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,uBAAsC,EACDzD,oBAAS,GADR,mBAChD0D,EADgD,KAC3BC,EAD2B,OAEf3D,mBAAsB,MAFP,mBAEhD4D,EAFgD,KAElCC,EAFkC,KAOjDC,EAAoB,WACxBH,GAAuB,GACvBE,EAAgB,OAMZE,EAAsB,SAAC9K,GAAD,OAAgBwK,GAA0BA,EAAuBxK,IAE7F,OACE,qCACE,eAAC+K,GAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASC,SAAS,OAArD,UACGrK,EAAM2C,KAAI,SAACxD,EAAY2E,GAAb,OACT,cAAC,GAAD,CAAsB3E,KAAMA,EAC1BkJ,cAAe,kBAnBA,SAAClJ,GACxB0K,GAAuB,GACvBE,EAAgB5K,GAiBamL,CAAiBnL,IACtCmJ,cAAe,kBAAM2B,EAAoB9K,KAF5B2E,MAKjB,cAAC0F,GAAD,OAEF,eAACe,GAAA,EAAD,CACElD,QAAS2C,EACT5C,KAAMwC,EACNY,WAAW,EAHb,UAKE,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,QAAS,EAA1C,UACE,cAACH,GAAA,EAAD,CAAMI,MAAI,EAAV,SACGjB,GACC,cAAC,GAAD,CACE3K,KAAM2K,EACNzB,cAAe,kBACb4B,EAAoBH,QAK5B,cAACa,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAACxF,EAAA,EAAD,CAAY2E,QAAQ,QAAQc,QAAQ,EAApC,gBACGnB,QADH,IACGA,OADH,EACGA,EAAcjS,cAKvB,cAACqT,GAAA,EAAD,UACGxB,EAAQ/G,KAAI,SAAC3G,EAAQ8H,GAAT,OACX,cAACY,EAAA,EAAD,CAEEC,QAAS,kBA9CI,SAAC3I,GACxBA,EAAOmP,QAAQrB,GACfE,IA4CyBoB,CAAiBpP,IAChC4I,MAAM,UAHR,SAKG5I,EAAOhJ,MAJH8Q,iBCtCNuH,GA3CS7G,aAAS,WAAO,IAAD,EACQC,qBAAWH,IAAhDJ,EAD6B,EAC7BA,aAAcC,EADe,EACfA,mBAEpBnE,EAKEmE,EALFnE,MACAkC,EAIEiC,EAJFjC,eACA5K,EAGE6M,EAHF7M,WACAmM,EAEEU,EAFFV,mBACA1C,EACEoD,EADFpD,iBAGMZ,EAAgB+D,EAAhB/D,YAEFmL,EAAW,uCAAG,WAAOnM,GAAP,SAAArK,EAAA,0DACdqL,EAAW,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAMtH,MADJ,iEAIZ4L,EAAmBtE,GAJP,2CAAH,sDAMXuK,EAA0B,CAC9B,CACE1W,KAAM,SACNmY,QAASpK,GAEX,CACE/N,KAAM,UACNmY,QAASG,IAIb,OACE,mCACE,qBAAKtF,UAAS,qBAAiB1O,EAAwB,GAAX,UAA5C,SACE,cAAC,GAAD,CAAS4N,QAAShD,EAAlB,SACE,cAAC,GAAD,CACElC,MAAOA,EACP2J,uBAAwB2B,EACxB5B,QAASA,a,uCCnCfjE,GAAYC,aAAW,SAAC6F,GAAD,MAAY,CACvCX,UAAW,CACT/D,SAAU,WACV2E,MAAO,EACPC,OAAQF,EAAMT,QAAQ,IAExBY,IAAK,CACHF,MAAOD,EAAMT,QAAQ,IAEvBa,MAAO,CACLxB,QAAS,YAIPyB,GAAgBpH,aAAS,YAAuB,IAAjB5D,EAAgB,oBAC3BR,EAAoBqE,qBAAWH,IAA/CJ,aAAgB9D,cAClBmL,EAAQM,eACR5F,EAAUR,GAAU8F,GAW1B,OACE,kDAAOvF,UAAWC,EAAQ2E,WAAehK,GAAzC,IAA+CkL,QAAQ,eAAvD,UACE,uBACElU,KAAK,OACLC,KAAK,GACL2G,GAAG,eACHuN,SAfN,SAAyB1W,GAA6C,IAAD,EACnE,aAAIA,EAAME,OAAO6C,aAAjB,aAAI,EAAoBwB,OAAQ,CAC9B,IAAM/E,EAAOQ,EAAME,OAAO6C,MAAM,IdI/B,SAAP,mCcHM4T,CAAgBnX,GAAMuB,MAAK,SAACpD,GAC1BoN,EAAcpN,EAAM6B,EAAKgD,WAYzBoU,OAAO,OACPjG,UAAWC,EAAQ0F,QAErB,cAACO,GAAA,EAAD,CACEtH,MAAM,UACNuH,UAAU,OACVnG,UAAWC,EAAQyF,IAHrB,SAIE,cAAC,KAAD,aCNOU,IDcc5H,aAAS,kBACpC,qBAAKwB,UAAU,wBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,uGAEE,iDAFF,WAKA,cAAC4F,GAAD,CAAe5F,UAAU,gCC3DRxB,aAAS,WAC9B,IAAM6H,EAAUC,cADoB,EAES7H,qBAAWH,IAAhDJ,EAF4B,EAE5BA,aAAcC,EAFc,EAEdA,mBACdnE,EAA4BkE,EAA5BlE,MAEFuM,EAAiB,SAACpN,GACtBA,GAAQkN,EAAQ7L,KAAR,gBAAsBrB,EAAKX,MAG/BkL,EAA0B,CAC9B,CACE1W,KAAM,SACNmY,QATgCjH,EAArBnD,kBAWb,CACE/N,KAAM,OACNmY,QAASoB,GAEX,CACEvZ,KAAM,SACNmY,QAhByChH,EAArCpB,kBAkBN,CACE/P,KAAM,OACNmY,QApByChH,EAAnB9C,iBAwB1B,OACI,cAAC,GAAD,CACErB,MAAOA,EACP2J,uBAAwB4C,EACxB7C,QAASA,Q,kjBCzBjB,IAAM8C,GAAW1H,KAAOC,IAAV,MAGR0H,GAAU3H,KAAOC,IAAV,MAGP2H,GAAgB5H,KAAOC,IAAV,MAKb4H,GAAa7H,KAAOC,IAAV,MAMV6H,GAAmB9H,KAAOC,IAAV,MC7BP8H,GD+BArI,aAAS,WACtB,IAAM+G,EAAQM,eAD2B,EAEfiB,IAAM5G,SAAS,GAFA,mBAElC1J,EAFkC,KAE3BuQ,EAF2B,KAGnCC,EAAqB,CACzBC,MAAO1B,EAAM2B,YAAYC,SAASC,eAClCC,KAAM9B,EAAM2B,YAAYC,SAASG,eAE7BC,EAAoB,SAACzJ,GAAD,OAAmBiJ,EAASjJ,IAGhD0J,EAAO,CACX,CACE5I,MAAO,UACP6I,KAAM,cAAC,KAAD,IACNC,MAAO,MACPC,aAAc,WACZlX,QAAQsB,IAAI,cAKlB,OACE,eAACyU,GAAD,WACE,cAAC,GAAD,IACA,cAACC,GAAD,UACE,eAAC,KAAD,CAAgB3I,MAAOtH,EAAOoR,cAAeL,EAA7C,UACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,gDAGJ,cAACb,GAAD,UACGc,EAAK7K,KAAI,SAAC+I,EAAK5H,GAAN,OACR,cAAC+J,GAAA,EAAD,CAEEC,GAAItR,IAAUsH,EACdiK,QAASf,EACTgB,MAAO,CACLC,gBAAgB,GAAD,OACbzR,IAAUsH,EAAQkJ,EAAmBK,KAAO,EAD/B,OAIjBa,eAAa,EATf,SAWE,cAACtC,GAAD,KAVKF,EAAI9G,YAcf,eAAC+H,GAAD,WACE,cAACC,GAAD,IAEA,eAACuB,GAAA,EAAD,CAAkB3R,MAAOA,EAAOuP,SA3CjB,SAAC1W,EAAYyO,GAAb,OAA+ByJ,EAAkBzJ,IA2CRsK,YAAU,EAAlE,UACE,cAACC,GAAA,EAAD,CAAwBX,MAAM,UAC9B,cAACW,GAAA,EAAD,CAAwBX,MAAM,WAC9B,cAACW,GAAA,EAAD,CAAwBX,MAAM,oB,mBE/DjC,SAASY,GAAiBtb,GAE/B,IAAMub,EAAkB,aAAIC,MA1BL,KA0B6BtS,QAgBvCuS,MAAK,kBAAMC,KAAKC,SAAW,MAdpC7K,EAAQ,EACNhC,EAAW9O,EACd4b,MAHe,KAIfjM,KAAI,SAACkM,GAEJ,MAAM,iBAAN,OAAwBN,EADxBzK,EAAQA,GAhCW,IAgCiB,EAAIA,EAAQ,GAChD,aAA2C+K,EAA3C,cAEDC,KARe,KASZC,EAAUnb,SAASkC,cAAc,OAEvC,OADAiZ,EAAQhN,UAAYD,EACbiN,EAeF,SAASC,GAAQC,GAClBA,EAAQjJ,UAAUrR,SAAS,OATjC,SAAwBua,GAItB,IAHA,IAAIC,EACE7Z,EAAS,GACX8Z,EAAOxb,SAASyb,iBAAiBH,EAAII,WAAWC,UAAW,MAAM,GAC7DJ,EAAIC,EAAKI,YAAala,EAAOkL,KAAK2O,GAC1C,OAAO7Z,EAMPma,CAAeR,GAASS,SAAQ,SAACC,GAC/B,GAAIA,EAAa,CACf,IAAMC,EAAoBtB,GAAiBqB,EAAY1b,aACvD0b,EAAYE,YAAYD,GACxBX,EAAQjJ,WAAa,UAK3B,SAAS8J,GAAWZ,EAASa,GAC3B,IAAMC,EAAcD,EAAuBE,UACrCC,EAAiBH,EAAuBI,aACxCC,EAAiBJ,EAAcE,EAC/BG,EAAMnB,EAAGoB,UACTC,EAASrB,EAAGiB,aACZ1E,EAAS4E,EAAME,EAErB,OACGF,GAAOL,GAAeK,EAAMD,GAC5B3E,EAASuE,GAAevE,GAAU2E,GAClCG,EAASL,GAAkBG,GAAOL,GAAevE,GAAU2E,E,8IC9DhE,IAAMI,GAAY1L,KAAO2L,KAAV,MAQTC,GnBkBkB,SACtBC,EACAC,GAEA,IAAI7C,EAAgD,KAUpD,OARkB,WAA6B,IAAD,uBAAxB8C,EAAwB,yBAAxBA,EAAwB,gBAC5B,OAAZ9C,IACF+C,aAAa/C,GACbA,EAAU,MAEZA,EAAUlF,YAAW,kBAAM8H,EAAI,WAAJ,EAAQE,KAAOD,ImB7BhCG,EAAS,SAACC,GAAD,OAAQA,GAAMA,MAAM,KCpB5BC,GDsBAzM,aAAS,WAAmB,IAAD,EACLC,qBAAWH,IAAtCL,EADgC,EAChCA,SAAUC,EADsB,EACtBA,aACV1I,EAA2CyI,EAA3CzI,eAAgBC,EAA2BwI,EAA3BxI,uBAChB0F,EAAuD+C,EAAvD/C,yBAA0BO,EAA6BwC,EAA7BxC,eAAgBzB,EAAaiE,EAAbjE,SAE5CiR,EAAkB5H,iBAAqBrJ,GALL,EAMciG,mBAAS,GANvB,mBAMjCiL,EANiC,KAMZC,EANY,OAOkBlL,mBAAS,OAP3B,mBAOjCmL,EAPiC,KAOVC,EAPU,OAQJpL,mBAAS,GARL,mBAQjCqL,EARiC,KAQrBC,EARqB,OASAtL,oBAAS,GATT,mBASjCuL,EATiC,KASnBC,EATmB,KAUlCC,EAAmBrI,iBAA8B,MACjDsI,EAA2BtI,iBAAO,IAXA,EAYVpD,oBAAS,GAZC,mBAYjChB,EAZiC,KAYxB2M,EAZwB,KAalCC,EAAcC,cACdzS,EAAS0S,SAASF,EAAYxS,QAdI,EAeF4G,mBAAS,IAfP,mBAejC+L,EAfiC,KAepBC,EAfoB,KAiBxC3J,qBAAU,WAAO,IACPE,EAAYkJ,EAAZlJ,QAkBR,OAjBc,uCAAG,8BAAA3T,EAAA,6DACf+c,GAAW,GADI,SAEUnQ,EAAepC,GAFzB,OAET6S,EAFS,OAGfjB,EAAezI,QAAU0J,EACzBA,IAAe1J,EAAS1G,UAAYoQ,EAAWnf,MAC/C4e,EAAyBnJ,QAAU2J,IACnCZ,EAAca,KACRC,EAAmB,GAClB,OAAP7J,QAAO,IAAPA,KACI8J,iBAAiB,KAClB7C,SAAQ,SAAC8C,GAAD,OAAoBF,EAAU9R,KAAKgS,EAAEC,aAAa,eAC7DN,GAAcO,EAAqBP,EAAWzR,KAAKU,iBACnDyQ,GAAW,GAZI,4CAAH,oDAedc,GACAlK,EAASK,iBAAiB,SAAU8J,GAC7B,WACL,OAAOnK,EAASM,oBAAoB,SAAU6J,MAE/C,IAvCqC,MAyCrBC,aAAYZ,EAAa,GAArCa,EAzCiC,oBAyDxC,OADAC,aAAiB,qBAdgB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,MAClC,GAAKvX,GAIL,GAAIuX,EAAO,CACT,IAAMhF,EAAQ,CACZiF,UAAU,WAAD,QAAcD,EAAd,SAEXd,EAAelE,SAPfkE,EAAe,CAAEe,UAAW,QAc9B,sBAAKjN,UAAU,SAAf,UACE,eAAC,GAAD,CACEA,UAAS,UAAKyL,EAAe,GAAK,UAAzB,KACT3L,MAPY,gCAChB,UAAAoL,EAAezI,eAAf,mBAAwB/H,YAAxB,mBAA8B1M,YAA9B,eAAoC8R,SAApC,UAA6CoL,EAAezI,eAA5D,iBAA6C,EAAwB/H,YAArE,aAA6C,EAA8B7I,MAMhEqb,GAFT,UAIE,sBAAKlN,UAAU,GAAf,UAAmBqL,EAAnB,OACA,cAACb,GAAD,oBAAeW,EAAf,YAAsCI,QAExC,cAAC,GAAD,CAASrM,QAASA,EAAlB,SACE,qBAAKc,UAAS,oBAAexK,EAAiB,YAAc,IAA5D,SACE,qBACEwK,UAAU,iBACVrB,QA8DV,WACE+M,GAAiBD,IA9DTzD,MAAO8E,EACP3K,IAAKwJ,WAOf,SAASS,IACP,IAAM9c,EAAc,GAIpB,OAHA1B,SAAS2e,iBAAiB,KAAK7C,SAAQ,SAACR,GACtC5Z,EAAOkL,KAAK0O,MAEP5Z,EAAOmZ,MAAK,SAAC3Z,EAAQ0O,GAAT,OAAoB1O,EAAEwb,UAAY9M,EAAE8M,aAGzD,SAASsC,EAAahK,GAAW,IACvBH,EAAYkJ,EAAZlJ,QACS0K,EAA0BvB,EAAnCnJ,QACR,GAAIA,EAAS,CACX,IAAM2K,EAWV,WAA+B,IACrB3K,EAAYkJ,EAAZlJ,QACR,OAAOA,EAA+B,IAApBA,EAAQwH,UAAmBxH,EAAQ4K,aAAe,EAblDC,GAChBhC,EAAyB8B,EAAQG,QAAQ,IACzCnC,EAkCJ,WAAmC,IACzB3I,EAAYkJ,EAAZlJ,QACR,OAAOiG,KAAK8E,MAAM/K,EAASwH,UAAYxH,EAAS0H,cApCvBsD,IACvB/C,IAAM,YAaV,SAA4BgD,GAC1B,GAAIA,EAAY,CAAC,IAAD,EACRC,EAAoBD,EAAWjB,aAAa,WAC5CtT,EAAI,UAAG+R,EAAezI,eAAlB,aAAG,EAAwB/H,KACrCvB,GAAQwU,GAAqBxS,EAAyBhC,EAAMwU,IAd1DC,EDvHD,SACLC,EACAC,GAEA,IAAMC,EAAkB,GACxB,IAAKF,EAAe,OAAOE,EAI3B,IAHA,IAEM3D,EAFcyD,EAAc5D,UACX4D,EAAc1D,aAE5B6D,EAAI,EAAGA,EAAIF,EAAYla,OAAQoa,IAAK,CAC3C,IAAM9E,EAAK4E,EAAYE,GAKvB,GAJIlE,GAAWZ,EAAI2E,KACjB7E,GAAQE,GACR6E,EAASvT,KAAK0O,IAEZA,EAAGoB,UAAYF,EACjB,MAGJ,OAAO2D,ECmGCE,CAA2BxL,EAAS0K,IAA0B,IACpC,QAkBlC,SAAST,EAAqBwB,GAC5B,GAAIA,EAAY,CACd,IAAMC,EAAYvgB,SAASwgB,cAAT,oBAAoCF,EAApC,OACT,OAATC,QAAS,IAATA,KAAWE,kBAIf,SAAShC,IAAiB,IAChB5J,EAAYkJ,EAAZlJ,QACR,OAAOiG,KAAK8E,MAAM/K,EAAS4K,aAAe5K,EAAS0H,kB,0FEpJxC,OAA0B,kCCA1B,OAA0B,kCCA1B,OAA0B,kC,yMCoBzC,IAAMmE,GAAoBxP,aAAOyP,KAAPzP,CAAH,MAIjB0P,GAAa1P,KAAOqE,IAAV,MAID3E,gBAAS,WAAqB,IACnCP,EAAaQ,qBAAWH,IAAxBL,SAEN1I,EAME0I,EANF1I,OACAO,EAKEmI,EALFnI,WACAN,EAIEyI,EAJFzI,eACAK,EAGEoI,EAHFpI,gBACAF,EAEEsI,EAFFtI,oBACAF,EACEwI,EADFxI,uBAEIgZ,EAAOC,eACPC,EAAoB,SACxBtf,GAEA,IAAMuf,EAAsBvf,EAAME,OAAOsC,KACnCgd,EAAsC,aAAtBxf,EAAME,OAAOqC,KAAsBvC,EAAME,OAAOuf,QAAUzf,EAAME,OAAOiH,MAEvF2O,EAAUlH,EAAS2Q,GACF,oBAAZzJ,GACTA,EAAQ0J,IAOZ,OACE,qCACE,cAAC,GAAD,IACA,eAAClK,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACE,eAACsJ,GAAD,WACE,cAACS,GAAA,EAAD,CAAYvW,GAAG,wBAAf,SACGiW,EAAKO,cAAc,CAAExW,GAAI,wBAE5B,eAACyW,GAAA,EAAD,CACEC,QAAQ,wBACR1Y,MAAOjB,EACP1D,KAAK,YACLkU,SAAU4I,EAJZ,UAME,cAACQ,GAAA,EAAD,CAAU3Y,MAAO,KAAjB,wDACA,cAAC2Y,GAAA,EAAD,CAAU3Y,MAAO,KAAjB,6BAIN,cAACmO,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACE,eAACsJ,GAAD,WACE,cAACc,GAAA,EAAD,CAAWjJ,UAAU,SAArB,kUAGA,cAACkJ,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACET,QAAStZ,EACTuQ,SAAU4I,EACV9c,KAAK,uBAGT6V,MAAM,yFAIZ,cAAC/C,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACE,eAACsJ,GAAD,WACE,cAACc,GAAA,EAAD,CAAWjJ,UAAU,SAArB,mYAIA,cAACkJ,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACET,QAASrZ,EACTsQ,SAAU4I,EACV9c,KAAK,iCAGT6V,MAAM,oLAIZ,eAAC/C,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,UACE,eAACsJ,GAAD,WACE,cAACc,GAAA,EAAD,CAAWjJ,UAAU,SAArB,6FACA,cAACkJ,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACET,QAASjZ,EACTkQ,SAAU4I,EACV9c,KAAK,wBAGT6V,MApEV7R,EAAkB,qEAAgB,uFAuE3BA,GAAmB,eAACyY,GAAD,WAClB,cAACS,GAAA,EAAD,CAAYvW,GAAG,2BAAf,SACGiW,EAAKO,cAAc,CAAExW,GAAI,0BAE5B,eAACyW,GAAA,EAAD,CACEC,QAAQ,2BACR1Y,MAAOV,EACPjE,KAAK,sBACLkU,SAAU4I,EAJZ,UAME,cAACQ,GAAA,EAAD,CAAU3Y,MAAO,IAAjB,SACE,cAACgY,GAAD,CAAY5e,IAAK4f,OAEnB,cAACL,GAAA,EAAD,CAAU3Y,MAAO,IAAjB,SACE,cAACgY,GAAD,CAAY5e,IAAK6f,OAEnB,cAACN,GAAA,EAAD,CAAU3Y,MAAO,IAAjB,SACE,cAACgY,GAAD,CAAY5e,IAAK8f,cAIrB7Z,GAAmB,cAACyY,GAAD,UACnB,cAACqB,GAAA,EAAD,CACEnX,GAAG,6BACHkP,MAAO+G,EAAKO,cAAc,CAAExW,GAAI,0BAChC5G,KAAK,OACL4E,MAAOb,EACP9D,KAAK,+BACLkU,SAAU4I,EACViB,OAAO,yB,oBChJfC,GAAgBrR,aAAS,YAAwB,EAArBpJ,UAAsB,IAC9CgJ,EAAkBK,qBACxBH,IADMF,cAIR,OACE,mCACGA,EAAczB,KAAI,WAAoBqR,GAApB,IAAG3P,EAAH,EAAGA,QAASzM,EAAZ,EAAYA,KAAZ,OACjB,cAAC,GAAD,CAAcyM,QAASA,EAASP,MAAOkQ,EAAGpc,KAAMA,GAAhD,uBAA2Eoc,YAO7E8B,GAAe,SAAC,GAAkD,IAAhDzR,EAA+C,EAA/CA,QAASP,EAAsC,EAAtCA,MAAOlM,EAA+B,EAA/BA,KAA+B,EAC7CkV,IAAM5G,UAAS,GAD8B,mBAC9DkB,EAD8D,KACxD2O,EADwD,KAE/D3a,EAAYqJ,qBAChBH,IAEI0R,EAAc,SAAC3gB,EAA6B4gB,GAChDF,GAAQ,GACR3a,EAAU8a,mBAAmBpS,IAU/B,OACE,cAACqS,GAAA,EAAD,CACEC,aAAc,CACZC,SAAU,MACVC,WAAY,QAEdlP,KAAMA,EACNmP,iBAAkB,IAClBlP,QAAS2O,EAPX,SASE,cAACQ,GAAA,EAAD,CAAOnP,QAAS2O,EAAaS,SAZR,kBAAT7e,EALO,CACnB8I,KAAM,UACNjL,MAAO,SAGsCmC,GAAQ,UAYrD,SACGyM,OAMMwR,MC9CTza,GAAY,IAAI4I,GAgDP0S,GA9CHlS,aAAS,WACnB,IAEQP,EAA+C7I,GAA/C6I,SAAUC,EAAqC9I,GAArC8I,aAAcC,EAAuB/I,GAAvB+I,mBACxB7M,EAAe6M,EAAf7M,WACF+D,EAAW4I,EAAS3H,oBAC1BiM,qBAAU,WACRrE,EAAahE,yBACZ,IAEH,IAAMyW,EAAU,uCAAG,sBAAA7hB,EAAA,0DACbwC,EADa,gCACK6M,EAAmBjE,uBADxB,2CAAH,qDAOhB,OAJAqI,qBAAU,WACRoO,MACC,CAACrf,IAGF,cAACgN,GAAiBsS,SAAlB,CAA2Bpa,MAAOpB,GAAlC,SACE,eAAC,IAAD,CACEG,OAAQ0I,EAAS1I,OACjBD,cAAe2I,EAAS3I,cACxBD,SAAUA,EAHZ,UAKE,cAAC,IAAD,CAAQwb,SAtBmC7f,kBAsB3C,SACE,eAAC,IAAD,WAIE,cAAC,IAAD,CAAO8f,OAAK,EAAC9c,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAO8c,OAAK,EAAC9c,KAAK,gBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAO8c,OAAK,EAAC9c,KAAK,YAAlB,SACE,cAAC,GAAD,WAIN,cAAC,GAAD,YCzCF+c,GAAcC,QACW,cAA7BvjB,OAAOwjB,SAASC,UAEe,UAA7BzjB,OAAOwjB,SAASC,UAEhBzjB,OAAOwjB,SAASC,SAASC,MACvB,2DA8CN,SAASC,GAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTjhB,MAAK,SAAAshB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnR,QACf8Q,UAAUC,cAAcO,YAI1BthB,QAAQsB,IACN,iHAKEuf,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBjhB,QAAQsB,IAAI,sCAGRuf,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BlhB,OAAM,SAAAf,GACLgB,QAAQhB,MAAM,4CAA6CA,M,WClG3DyiB,GAAM,cAAC,GAAD,IAEZC,IAASC,OAAOF,GAAKtkB,SAASykB,eAAe,SDmBtC,SAAkBf,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIe,IACnBthB,kBACDvD,OAAOwjB,SAASsB,MAEJC,SAAW/kB,OAAOwjB,SAASuB,OAIvC,OAGF/kB,OAAOqV,iBAAiB,QAAQ,WAC9B,IAAMuO,EAAK,UAAMrgB,kBAAN,sBAEP+f,KAgEV,SAAiCM,EAAeC,GAE9CmB,MAAMpB,GACHjhB,MAAK,SAAAmC,GAEJ,IAAMmgB,EAAcngB,EAASogB,QAAQnhB,IAAI,gBAEnB,MAApBe,EAASkB,QACO,MAAfif,IAA8D,IAAvCA,EAAYzX,QAAQ,cAG5CsW,UAAUC,cAAcoB,MAAMxiB,MAAK,SAAAshB,GACjCA,EAAamB,aAAaziB,MAAK,WAC7B3C,OAAOwjB,SAAS6B,eAKpB1B,GAAgBC,EAAOC,MAG1B9gB,OAAM,WACLC,QAAQsB,IACN,oEArFAghB,CAAwB1B,EAAOC,GAI/BC,UAAUC,cAAcoB,MAAMxiB,MAAK,WACjCK,QAAQsB,IACN,iHAMJqf,GAAgBC,EAAOC,OCjD/BE,I","file":"static/js/main.7d61d26f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/back.adb63b87.svg\";","export default __webpack_public_path__ + \"static/media/home.b0dac3bc.svg\";","export default __webpack_public_path__ + \"static/media/settings.a753d163.svg\";","import { FB2_XSL, FB2_META, FB2_COVER_IMAGE_XSL } from './xsl'\n\nfunction convertWithXSL(text: string, xsl: string) {\n  const parser = new DOMParser()\n  const xsltProcessor = new XSLTProcessor()\n  const xml = parser.parseFromString(text, 'text/xml')\n  const parsedXsl = new window.DOMParser().parseFromString(xsl, 'text/xml')\n  xsltProcessor.importStylesheet(parsedXsl)\n  return xsltProcessor.transformToFragment(xml, document)\n}\n\nexport function getBookPreviewInfo(fb2Book: string) {\n  const rawMeta = convertWithXSL(fb2Book, FB2_META)\n  const meta = rawMeta.textContent ? JSON.parse(rawMeta.textContent) : {}\n  const rawCover = convertWithXSL(fb2Book, FB2_COVER_IMAGE_XSL)\n  const cover = rawCover.textContent\n  return { meta, cover }\n}\n\nexport function parseToInnerBook(fb2Book: string) {\n  const body = convertWithXSL(fb2Book, FB2_XSL)\n  return body.children[0].innerHTML || ''\n}\n\nexport const defaultEncoding = 'utf8'\n\nexport const isDefaultEncoding = (encoding: string) =>\n  encoding === defaultEncoding\n\nexport function getTextEncoding(text: string) {\n  const VRegExp = new RegExp(/<\\?xml[^]+?>/gi)\n  const testString = (VRegExp.exec(text) || [])[0] || ''\n\n  if (testString.includes('windows-1251')) return 'windows-1251'\n  return defaultEncoding\n}\n","const FB2_COVER_IMAGE_XSL = `<?xml version=\"1.0\"?>\n<xsl:stylesheet\n    version=\"1.0\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    xmlns:fb=\"http://www.gribuser.ru/xml/fictionbook/2.0\">\n    <xsl:output method=\"text\" omit-xml-declaration=\"yes\" indent=\"no\" encoding=\"UTF-8\"/>\n    <xsl:template match=\"/*\">\n    <xsl:for-each select=\"fb:description/fb:title-info/fb:coverpage/fb:image\">\n        <xsl:call-template name=\"image\"/>\n    </xsl:for-each>\n    </xsl:template>\n    <xsl:template match=\"fb:image\" name=\"image\">\n        <xsl:choose>\n            <xsl:when test=\"starts-with(@xlink:href,'#')\">\n                <xsl:text>data:</xsl:text>\n                <xsl:variable name=\"href\" select=\"substring-after(@xlink:href,'#')\"/>\n                <xsl:value-of select=\"//fb:binary[@id=$href]/@content-type\" disable-output-escaping=\"yes\"/><xsl:text>;base64,</xsl:text>\n                <xsl:value-of select=\"//fb:binary[@id=$href]\" disable-output-escaping=\"yes\"/>\n            </xsl:when>\n            <xsl:otherwise>\n                <xsl:attribute name=\"src\">\n                    <xsl:value-of select=\"@xlink:href\"/>\n                </xsl:attribute>\n            </xsl:otherwise>\n        </xsl:choose>\n    </xsl:template>\n</xsl:stylesheet>`\n\nconst FB2_XSL = `<?xml version=\"1.0\"?>\n<xsl:stylesheet\n        version=\"3.0\"\n        xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        xmlns:fb=\"http://www.gribuser.ru/xml/fictionbook/2.0\"\n        >\n    <xsl:output\n            media-type=\"text/html\"\n            method=\"html\"\n            encoding=\"utf-8\"\n            omit-xml-declaration=\"yes\"\n            doctype-public=\"HTML5\"\n            />\n\n    <xsl:key name=\"note-link\" match=\"fb:section\" use=\"@id\"/>\n    <xsl:template match=\"/*\">\n        <div class=\"text\">\n            <xsl:for-each select=\"fb:description/fb:title-info/fb:coverpage/fb:image\">\n                <xsl:call-template name=\"image\"/>\n            </xsl:for-each>\n\n            <xsl:for-each select=\"fb:description/fb:title-info/fb:annotation\">\n                <section class=\"text-annotation\">\n                    <xsl:call-template name=\"annotation\"/>\n                </section>\n            </xsl:for-each>\n\n            <!--<navMap style=\"display: none;\">-->\n                <!--<xsl:apply-templates select=\"fb:body\" mode=\"toc\"/>-->\n            <!--</navMap>-->\n\n\n            <xsl:for-each select=\"fb:body\">\n                <xsl:if test=\"position() != 1\">\n                    <div class=\"separator\"></div>\n                </xsl:if>\n\n                <!--<xsl:if test=\"not(fb:title) and @name\">-->\n                    <!--<h4 align=\"center\">-->\n                        <!--<xsl:value-of select=\"@name\"/>-->\n                    <!--</h4>-->\n                <!--</xsl:if>-->\n\n                <div class=\"text-wrapper\">\n                    <xsl:apply-templates/>\n                </div>\n\n            </xsl:for-each>\n        </div>\n    </xsl:template>\n    <!-- author template -->\n    <xsl:template name=\"author\">\n        <xsl:value-of select=\"fb:first-name\"/>\n        <xsl:text disable-output-escaping=\"no\">&#032;</xsl:text>\n        <xsl:value-of select=\"fb:middle-name\"/>&#032;\n        <xsl:text disable-output-escaping=\"no\">&#032;</xsl:text>\n        <xsl:value-of select=\"fb:last-name\"/>\n        <br/>\n    </xsl:template>\n    <!-- secuence template -->\n    <xsl:template name=\"sequence\">\n        <xsl:value-of select=\"@name\"/>\n        <xsl:if test=\"@number\">\n            <xsl:text disable-output-escaping=\"no\">,&#032;#</xsl:text>\n            <xsl:value-of select=\"@number\"/>\n        </xsl:if>\n        <xsl:if test=\"fb:sequence\">\n            <ul>\n                <xsl:for-each select=\"fb:sequence\">\n                    <xsl:call-template name=\"sequence\"/>\n                </xsl:for-each>\n            </ul>\n        </xsl:if>\n    </xsl:template>\n    <!-- toc template -->\n    <xsl:template match=\"fb:section|fb:body\" mode=\"toc\">\n        <xsl:choose>\n            <xsl:when test=\"name()='body' and position()=1 and not(fb:title)\">\n                <xsl:apply-templates select=\"fb:section\" mode=\"toc\"/>\n            </xsl:when>\n            <xsl:otherwise>\n                <navPoint>\n                    <navLabel>\n                        <text>\n                            <xsl:value-of select=\"normalize-space(fb:title | @name)\"/>\n                        </text>\n                    </navLabel>\n                    <content src=\"#TOC_{generate-id()}\"></content>\n                    <!--<xsl:value-of select=\"normalize-space(fb:title | //fb:body/@name)\"/>-->\n                    <!--<xsl:value-of select=\"normalize-space(fb:body[@name == 'notes']/@name | fb:body/title)\"/>-->\n\n                    <!-- fb:body[@name = 'notes'] -->\n                    <xsl:if test=\"fb:section\">\n                        <navPoint>\n                            <xsl:apply-templates select=\"fb:section\" mode=\"toc\"/>\n                        </navPoint>\n                    </xsl:if>\n                </navPoint>\n            </xsl:otherwise>\n        </xsl:choose>\n    </xsl:template>\n    <!-- description -->\n    <xsl:template match=\"fb:description\">\n        <xsl:apply-templates/>\n    </xsl:template>\n    <!-- body -->\n    <xsl:template match=\"fb:body\">\n        <div>\n            <xsl:apply-templates/>\n        </div>\n    </xsl:template>\n\n    <xsl:template match=\"fb:section\">\n        <section>\n            <xsl:attribute name=\"class\">\n                <xsl:text>default-section</xsl:text>\n                <xsl:if test=\"starts-with(translate(fb:title, 'ГЛАВА', 'глава'), 'глава')\">\n                    <xsl:text> chapter</xsl:text>\n                </xsl:if>\n            </xsl:attribute>\n            <a name=\"TOC_{generate-id()}\"></a>\n            <xsl:if test=\"@id\">\n                <xsl:element name=\"a\">\n                    <xsl:attribute name=\"name\">\n                        <xsl:value-of select=\"@id\"/>\n                    </xsl:attribute>\n                </xsl:element>\n            </xsl:if>\n            <xsl:apply-templates/>\n        </section>\n    </xsl:template>\n    <xsl:template match=\"fb:body[@name='notes']//fb:section\">\n        <div>\n            <xsl:if test=\"@id\">\n                <xsl:attribute name=\"class\">\n                    <xsl:value-of select=\"'annotation'\"/>\n                </xsl:attribute>\n            </xsl:if>\n            <a name=\"TOC_{generate-id()}\"></a>\n            <xsl:if test=\"@id\">\n                <xsl:element name=\"a\">\n                    <xsl:attribute name=\"name\">\n                        <xsl:value-of select=\"@id\"/>\n                    </xsl:attribute>\n                </xsl:element>\n            </xsl:if>\n            <xsl:apply-templates/>\n        </div>\n    </xsl:template>\n\n\n    <!-- section/title -->\n    <xsl:template match=\"fb:section/fb:title|fb:poem/fb:title\">\n        <xsl:choose>\n            <xsl:when test=\"count(ancestor::node()) &lt; 9\">\n                <xsl:element name=\"{concat('h',count(ancestor::node())-3)}\">\n                    <a name=\"TOC_{generate-id()}\"></a>\n                    <xsl:if test=\"@id\">\n                        <xsl:element name=\"a\">\n                            <xsl:attribute name=\"name\">\n                                <xsl:value-of select=\"@id\"/>\n                            </xsl:attribute>\n                        </xsl:element>\n                    </xsl:if>\n                    <xsl:apply-templates/>\n                </xsl:element>\n            </xsl:when>\n            <xsl:otherwise>\n                <xsl:element name=\"h6\">\n                    <xsl:if test=\"@id\">\n                        <xsl:element name=\"a\">\n                            <xsl:attribute name=\"name\">\n                                <xsl:value-of select=\"@id\"/>\n                            </xsl:attribute>\n                        </xsl:element>\n                    </xsl:if>\n                    <xsl:apply-templates/>\n                </xsl:element>\n            </xsl:otherwise>\n        </xsl:choose>\n    </xsl:template>\n    <!-- section/title -->\n    <xsl:template match=\"fb:body/fb:title\">\n        <!--<h1 style=\"display: none;\">-->\n            <!--<xsl:apply-templates mode=\"title\"/>-->\n        <!--</h1>-->\n    </xsl:template>\n    <xsl:template match=\"fb:body[@name='notes']/fb:title\">\n        <h1>\n            <xsl:apply-templates mode=\"title\"/>\n        </h1>\n    </xsl:template>\n\n    <xsl:template match=\"fb:title/fb:p\">\n        <xsl:apply-templates/>\n        <xsl:text disable-output-escaping=\"no\">&#032;</xsl:text>\n        <br/>\n    </xsl:template>\n    <!-- subtitle -->\n    <xsl:template match=\"fb:subtitle\">\n        <xsl:if test=\"@id\">\n            <xsl:element name=\"a\">\n                <xsl:attribute name=\"name\">\n                    <xsl:value-of select=\"@id\"/>\n                </xsl:attribute>\n            </xsl:element>\n        </xsl:if>\n        <h5>\n            <xsl:apply-templates/>\n        </h5>\n    </xsl:template>\n    <!-- p -->\n    <xsl:template match=\"fb:p\">\n        <!--<xsl:if test\"preceding-sibling::*[1][name()] != 'fb:image'\">-->\n            <p data-id=\"{position()}-{last()}}\">\n                <xsl:if test=\"@id\">\n                    <xsl:element name=\"a\">\n                        <xsl:attribute name=\"name\">\n                            <xsl:value-of select=\"@id\"/>\n                        </xsl:attribute>\n                    </xsl:element>\n                </xsl:if>\n                <xsl:apply-templates/>\n            </p>\n        <!--</xsl:if>-->\n    </xsl:template>\n    <!-- strong -->\n    <xsl:template match=\"fb:strong\">\n        <b>\n            <xsl:apply-templates/>\n        </b>\n    </xsl:template>\n    <!-- emphasis -->\n    <xsl:template match=\"fb:emphasis\">\n        <i>\n            <xsl:apply-templates/>\n        </i>\n    </xsl:template>\n    <!-- style -->\n    <xsl:template match=\"fb:style\">\n        <span class=\"{@name}\">\n            <xsl:apply-templates/>\n        </span>\n    </xsl:template>\n    <!-- empty-line -->\n    <xsl:template match=\"fb:empty-line\">\n        <xsl:if test=\"following-sibling::*[1] != fb:image\">\n            <br/>\n        </xsl:if>\n    </xsl:template>\n    <!-- link -->\n    <xsl:template match=\"fb:a\">\n        <xsl:choose>\n            <xsl:when test=\"starts-with(@xlink:href,'#')\">\n                <xsl:element name=\"a\">\n                    <xsl:attribute name=\"class\">\n                        <xsl:value-of select=\"'footnote'\"/>\n                    </xsl:attribute>\n                    <xsl:attribute name=\"href\">\n                        <xsl:value-of select=\"@xlink:href\"/>\n                    </xsl:attribute>\n                    <xsl:attribute name=\"title\">\n                        <xsl:value-of select=\"key('note-link',substring-after(@xlink:href,'#'))/fb:p\"/>\n                    </xsl:attribute>\n                    <xsl:choose>\n                        <xsl:when test=\"(@type) = 'note'\">\n                            <sup>\n                                <xsl:apply-templates/>\n                            </sup>\n                        </xsl:when>\n                        <xsl:otherwise>\n                            <xsl:apply-templates/>\n                        </xsl:otherwise>\n                    </xsl:choose>\n                </xsl:element>\n            </xsl:when>\n            <xsl:otherwise>\n                <xsl:element name=\"span\">\n                    <xsl:choose>\n                        <xsl:when test=\"(@type) = 'note'\">\n                            <sup>\n                                <xsl:apply-templates/>\n                            </sup>\n                        </xsl:when>\n                        <xsl:otherwise>\n                            <xsl:apply-templates/>\n                        </xsl:otherwise>\n                    </xsl:choose>\n                </xsl:element>\n            </xsl:otherwise>\n        </xsl:choose>\n    </xsl:template>\n    <!-- annotation -->\n    <xsl:template name=\"annotation\">\n        <xsl:if test=\"@id\">\n            <xsl:element name=\"a\">\n                <xsl:attribute name=\"name\">\n                    <xsl:value-of select=\"@id\"/>\n                </xsl:attribute>\n            </xsl:element>\n        </xsl:if>\n        <xsl:apply-templates/>\n    </xsl:template>\n    <!-- epigraph -->\n    <xsl:template match=\"fb:epigraph\">\n        <blockquote class=\"epigraph\">\n            <xsl:if test=\"@id\">\n                <xsl:element name=\"a\">\n                    <xsl:attribute name=\"name\">\n                        <xsl:value-of select=\"@id\"/>\n                    </xsl:attribute>\n                </xsl:element>\n            </xsl:if>\n            <xsl:apply-templates/>\n        </blockquote>\n    </xsl:template>\n    <!-- epigraph/text-author -->\n    <xsl:template match=\"fb:epigraph/fb:text-author\">\n        <blockquote class=\"author\">\n            <i>\n                <xsl:apply-templates/>\n            </i>\n        </blockquote>\n    </xsl:template>\n    <!-- cite -->\n    <xsl:template match=\"fb:cite\">\n        <blockquote>\n            <xsl:if test=\"@id\">\n                <xsl:element name=\"a\">\n                    <xsl:attribute name=\"name\">\n                        <xsl:value-of select=\"@id\"/>\n                    </xsl:attribute>\n                </xsl:element>\n            </xsl:if>\n            <xsl:apply-templates/>\n        </blockquote>\n    </xsl:template>\n    <!-- cite/text-author -->\n    <xsl:template match=\"fb:text-author\">\n        <blockquote>\n            <i>\n                <xsl:apply-templates/>\n            </i>\n        </blockquote>\n    </xsl:template>\n    <!-- date -->\n    <xsl:template match=\"fb:date\">\n        <xsl:choose>\n            <xsl:when test=\"not(@value)\">\n                &#160;&#160;&#160;\n                <xsl:apply-templates/>\n                <br/>\n            </xsl:when>\n            <xsl:otherwise>\n                &#160;&#160;&#160;<xsl:value-of select=\"@value\"/>\n                <br/>\n            </xsl:otherwise>\n        </xsl:choose>\n    </xsl:template>\n    <!-- poem -->\n    <xsl:template match=\"fb:poem\">\n        <blockquote>\n            <xsl:if test=\"@id\">\n                <xsl:element name=\"a\">\n                    <xsl:attribute name=\"name\">\n                        <xsl:value-of select=\"@id\"/>\n                    </xsl:attribute>\n                </xsl:element>\n            </xsl:if>\n            <xsl:apply-templates/>\n        </blockquote>\n    </xsl:template>\n\n    <!-- stanza -->\n    <xsl:template match=\"fb:stanza\">\n        <xsl:apply-templates/>\n        <br/>\n    </xsl:template>\n    <!-- v -->\n    <xsl:template match=\"fb:v\">\n        <xsl:if test=\"@id\">\n            <xsl:element name=\"a\">\n                <xsl:attribute name=\"name\">\n                    <xsl:value-of select=\"@id\"/>\n                </xsl:attribute>\n            </xsl:element>\n        </xsl:if>\n        <xsl:apply-templates/>\n        <br/>\n    </xsl:template>\n    <!-- image -->\n    <xsl:template match=\"fb:image\" name=\"image\">\n        <div>\n            <xsl:choose>\n                <xsl:when test=\"ancestor::fb:coverpage\">\n                    <xsl:attribute name=\"class\">\n                        <xsl:value-of select=\"'text-cover'\"/>\n                    </xsl:attribute>\n                </xsl:when>\n                <xsl:otherwise>\n                    <xsl:attribute name=\"class\">\n                        <xsl:text>default image</xsl:text>\n                    </xsl:attribute>\n                </xsl:otherwise>\n            </xsl:choose>\n            <div class=\"image-wrapper\">\n                <img>\n                    <xsl:choose>\n                        <xsl:when test=\"starts-with(@xlink:href,'#')\">\n                            <xsl:attribute name=\"src\">\n                                <xsl:text>data:</xsl:text>\n                                <xsl:variable name=\"href\" select=\"substring-after(@xlink:href,'#')\"/>\n                                <set variable=\"href\" expression=\"substring-after(@xlink:href,'#')\"/>\n                                <xsl:value-of select=\"//fb:binary[@id=$href]/@content-type\" disable-output-escaping=\"yes\"/><xsl:text>;base64,</xsl:text>\n                                <!--<xsl:value-of select=\"substring-after(@xlink:href,'#')\"/>-->\n                                <xsl:value-of select=\"//fb:binary[@id=$href]\" disable-output-escaping=\"yes\"/>\n                            </xsl:attribute>\n\n                        </xsl:when>\n                        <xsl:otherwise>\n                            <xsl:attribute name=\"src\">\n                                <xsl:value-of select=\"@xlink:href\"/>\n                            </xsl:attribute>\n                        </xsl:otherwise>\n                    </xsl:choose>\n                </img>\n            </div>\n            <xsl:if test=\"following-sibling::node()[1]/fb:emphasis\">\n                <div class=\"image-annotation\">\n                    <xsl:apply-templates select=\"following-sibling::fb:p[1]\"/>\n                </div>\n            </xsl:if>\n        </div>\n    </xsl:template>\n</xsl:stylesheet>`\n\nconst FB2_META = `<?xml version=\"1.0\"?>\n<xsl:stylesheet\n    version=\"3.0\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    xmlns:fb=\"http://www.gribuser.ru/xml/fictionbook/2.0\">\n    <xsl:output method=\"text\" omit-xml-declaration=\"yes\" indent=\"no\" encoding=\"UTF-8\"/>\n<xsl:template match=\"/*\">{<xsl:for-each select=\"fb:description/fb:title-info\">\t\n    \"title\": \"<xsl:value-of select=\"fb:book-title\" />\",\n    \"genre\": \"<xsl:value-of select=\"fb:genre\" />\",\n    \"author\": {\n        \"firstName\": \"<xsl:value-of select=\"fb:author/fb:first-name\" />\",\n        \"lastName\": \"<xsl:value-of select=\"fb:author/fb:last-name\" />\"\n    },\n    \"date\": \"<xsl:value-of select=\"fb:date\" />\",\n    \"keywords\": \"<xsl:value-of select=\"fb:keywords\" />\",\n    \"lang\": \"<xsl:value-of select=\"fb:lang\" />\"\n</xsl:for-each>}</xsl:template>\n</xsl:stylesheet>`\n\nexport { FB2_XSL, FB2_META, FB2_COVER_IMAGE_XSL }\n","import { BookList } from '../types'\nimport {\n  defaultEncoding,\n  getTextEncoding,\n  isDefaultEncoding,\n} from './converter'\n\nexport async function getBooksList(): Promise<BookList> {\n  return fetch('db.json').then((resp) => resp.json())\n}\n\nexport async function getBook(filePath: string): Promise<string> {\n  return fetch(filePath).then((resp) => resp.text())\n}\n\nexport async function readFile(\n  file: File,\n  encoding: string = defaultEncoding\n): Promise<string> {\n  const reader = new FileReader()\n  return new Promise((resolve, reject) => {\n    reader.onload = (event) => {\n      const result = event?.target?.result\n      if (result && typeof result === 'string') {\n        return resolve(result)\n      }\n      return reject('')\n    }\n    reader.onerror = (error) => reject('error reading file' + error)\n\n    reader.readAsText(file, encoding)\n  })\n}\nexport async function readFileContent(file: File): Promise<string> {\n  const text = await readFile(file)\n  const encoding = getTextEncoding(text)\n  if (isDefaultEncoding(encoding)) return text\n  return await readFile(file, encoding)\n}\n\nexport const debounce = <F extends (...args: any[]) => any>(\n  func: F,\n  waitFor: number\n) => {\n  let timeout: ReturnType<typeof setTimeout> | null = null\n\n  const debounced = (...args: Parameters<F>) => {\n    if (timeout !== null) {\n      clearTimeout(timeout)\n      timeout = null\n    }\n    timeout = setTimeout(() => func(...args), waitFor)\n  }\n\n  return debounced as (...args: Parameters<F>) => ReturnType<F>\n}\n\nexport function importScript(src: string) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script')\n    document.body.appendChild(script)\n    script.onload = resolve\n    script.onerror = reject\n    script.async = true\n    script.src = src\n    return src;\n  })\n}\n","import { importScript } from './common'\n\ninterface Files {\n  id: string\n}\n\nlet loaded = false\nexport async function loadGapi() {\n  if (loaded) return true\n  return importScript('https://apis.google.com/js/client:platform.js')\n    .then(() => {\n      return new Promise((resolve, reject) =>\n        window.gapi.load('auth2', () => resolve(window.gapi.auth2))\n      )\n    })\n    .then(() => {\n      loaded = true\n      return loaded\n    })\n    .catch(() => {\n      console.error('google api is not loaded')\n    })\n}\n\nlet isGAPILoaded = false\nconst googleDriveAPIDocument =\n  'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'\nconst scope =\n  'https://www.googleapis.com/auth/drive.appfolder https://www.googleapis.com/auth/drive'\nexport async function load() {\n  if (isGAPILoaded) return\n  await loadGapi()\n  return new Promise((resolve, reject) => {\n    return window.gapi.client\n      .init({\n        apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n        clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n        discoveryDocs: [googleDriveAPIDocument],\n        scope: scope,\n      })\n      .then(() => (isGAPILoaded = true))\n      .then(resolve)\n      .catch(reject)\n  })\n}\n\nexport async function signIn() {\n  await load()\n  try {\n    return window.gapi.auth2.getAuthInstance().signIn()\n  } catch (e) {\n    console.error('error in signIn', e)\n  }\n}\n\nexport async function signOut() {\n  await load()\n  try {\n    return window.gapi.auth2.getAuthInstance().signOut()\n  } catch (e) {\n    console.error('error in signOut', e)\n  }\n}\n\nexport async function isLoggedIn() {\n  await load()\n  try {\n    return (\n      window.gapi.auth2.getAuthInstance() &&\n      window.gapi.auth2.getAuthInstance().isSignedIn.get()\n    )\n  } catch (e) {\n    console.error('error in isLoggedIn', e)\n    return false\n  }\n}\nconst folderMIME = 'application/vnd.google-apps.folder'\nconst fileMIME = 'text/plain'\n\nconst create = (spaces: string) => (type: string) => async (\n  name: string,\n  folderId?: string\n) => {\n  console.log(spaces, type, name, folderId)\n  const mimeType = type === 'folder' ? folderMIME : fileMIME\n  const parents = folderId ? [folderId] : spaces === 'drive' ? [] : [spaces]\n  const response = await promisify(gapi.client.drive.files.create, {\n    resource: {\n      name,\n      mimeType,\n      parents,\n    },\n    fields: '*',\n  })\n  return response.result\n}\n\nconst find = (spaces: string) => (type: string) => async (query: string) => {\n  const mimeType =\n    type === 'folder'\n      ? `and mimeType = '${folderMIME}'`\n      : `and not mimeType = '${folderMIME}'`\n  const q = `${query} ${mimeType}`\n  let ret: any = []\n  try {\n    let token\n    do {\n      const response: any = await promisify(\n        window.gapi.client.drive.files.list,\n        {\n          spaces,\n          fields: '*',\n          pageSize: 100,\n          pageToken: token,\n          orderBy: 'createdTime',\n          q,\n        }\n      )\n      ret = ret.concat(response.result.files)\n      token = response.result.nextPageToken\n    } while (token)\n\n    return ret\n  } catch (e) {\n    console.error('can`t list items in drive with query: ', query, e)\n  }\n}\n\nconst download = async (fileId: string) => {\n  const resp = await promisify(gapi.client.drive.files.get, {\n    fileId: fileId,\n    alt: 'media',\n  })\n\n  return resp.body\n}\nconst remove = async (fileId: string) => {\n  try {\n    await promisify(gapi.client.drive.files.delete, {\n      fileId: fileId,\n    })\n    return true\n  } catch (err) {\n    if (err.status === 404) {\n      return false\n    }\n    throw err\n  }\n}\n\nconst getOrCreate = (spaces: string) => (type: string) => async (\n  q: string,\n  name: string,\n  folderId?: string\n) => {\n  const exist = await find(spaces)(type)(q)\n  return exist.length ? exist : [await create(spaces)(type)(name, folderId)]\n}\n\nconst upload = (spaces: string) => async (fileId: string, content: string) => {\n  try {\n    const response: any = await promisify(gapi.client.request, {\n      spaces: spaces === 'drive' ? [] : [spaces],\n      path: `/upload/drive/v3/files/${fileId}`,\n      method: 'PATCH',\n      params: { uploadType: 'media' },\n      body: typeof content === 'string' ? content : JSON.stringify(content),\n    })\n    return response.result\n  } catch (e) {\n    console.error('can`t upload file with: ', fileId, content, e)\n  }\n}\n\nfunction promisify(\n  gapiFn: any,\n  options: any\n): Promise<gapi.client.Response<Files>> {\n  return new Promise((resolve, reject) => {\n    return gapiFn(options).then(\n      (resp: any) => {\n        if (resp && (resp.status < 200 || resp.status > 299)) {\n          console.error('GAPI call returned bad status', resp)\n          reject(resp)\n        } else {\n          resolve(resp)\n        }\n      },\n      (err: any) => {\n        return reject(err)\n      }\n    )\n  })\n}\n\nconst createInDrive = create('drive')\nconst findInDrive = find('drive')\nconst getOrCreateInDrive = getOrCreate('drive')\nconst uploadInDrive = upload('drive')\nexport const drive = {\n  getOrCreate: {\n    folder: getOrCreateInDrive('folder'),\n    file: getOrCreateInDrive('file'),\n  },\n  create: {\n    folder: createInDrive('folder'),\n    file: createInDrive('file'),\n  },\n  find: {\n    folder: findInDrive('folder'),\n    file: findInDrive('file'),\n  },\n  upload: uploadInDrive,\n  download,\n  remove,\n}\n\nconst createInAppFolder = create('appDataFolder')\nconst findInAppFolder = find('appDataFolder')\nconst getOrCreateInAppFolder = getOrCreate('appDataFolder')\nconst uploadOnAppFolder = upload('appDataFolder')\nexport const appFolder = {\n  getOrCreate: {\n    foder: getOrCreateInAppFolder('folder'),\n    file: getOrCreateInAppFolder('file'),\n  },\n  create: {\n    folder: createInAppFolder('folder'),\n    file: createInAppFolder('file'),\n  },\n  find: {\n    folder: find('folder'),\n    file: findInAppFolder('file'),\n  },\n  upload: uploadOnAppFolder,\n  download,\n  remove,\n}\n","import { action, makeAutoObservable } from 'mobx'\nimport { createIntl, createIntlCache } from 'react-intl'\n\nimport en_messages from '../translations/locales/en.json'\nimport ru_messages from '../translations/locales/ru.json'\nimport * as cloud from '../uitls/cloud'\nimport { RootStore } from './RootStore'\n\nconst DEFAULT_LOCALE = 'en'\nexport default class AppStore {\n  rootStore: RootStore\n  messages: {\n    [key: string]: any\n  }\n  defaultLocale: string = DEFAULT_LOCALE\n  locale: string = DEFAULT_LOCALE\n  wordsHighlight: boolean = true\n  dynamicTextOrientation: boolean = false\n  pageColor: string = 'white'\n  pageBackgroundColor: string = '#0000'\n  isLoggedIn: boolean = false\n  isClientLoaded: boolean = false\n  isUseImageCover: boolean = true\n  imageCover: string = '1'\n\n  constructor(rootStore: RootStore) {\n    makeAutoObservable(this)\n    this.rootStore = rootStore\n    const globalIntlCache = createIntlCache()\n\n    createIntl({ locale: 'ru', messages: ru_messages }, globalIntlCache)\n    createIntl({ locale: 'en', messages: en_messages }, globalIntlCache)\n\n    this.defaultLocale = 'en'\n    this.messages = {\n      en: en_messages,\n      ru: ru_messages,\n    } as {\n      [key: string]: any\n    }\n\n    cloud.load().then((x) => {\n      this.isClientLoaded = true\n      cloud.isLoggedIn().then((isLoggedIn) => (this.isLoggedIn = isLoggedIn))\n    })\n  }\n\n  setLocale = action((locale: string) => {\n    if (Object.keys(this.messages).includes(locale)) {\n      this.locale = locale\n    } else {\n      throw Error('Unsupported locale')\n    }\n  })\n\n  setImageCoverAction = action((image: string) => (this.imageCover = image))\n\n  getLocaleMessages = action(() => {\n    const locale = this.locale\n    return this.messages[locale]\n  })\n\n  toggleHightligting = action((value: boolean) => {\n    this.wordsHighlight = value\n  })\n\n  toggleDynamicTextOrientation = action((value: boolean) => {\n    this.dynamicTextOrientation = value\n  })\n\n  setPageColor = action((value: string) => {\n    this.pageColor = value\n  })\n\n  toggleUseImageCover = action((value: boolean) => {\n    this.isUseImageCover = value\n  })\n\n  setPageBackgroundColorAction = action((value: string) => {\n    this.pageBackgroundColor = value\n  })\n\n  signInAction = action(async () => {\n    await cloud.signIn()\n    this.isLoggedIn = await cloud.isLoggedIn()\n  })\n\n  signOutAction = action(async () => {\n    await cloud.signOut()\n    this.isLoggedIn = await cloud.isLoggedIn()\n  })\n}\n","import { openDB, DBSchema } from 'idb'\nimport { Book } from '../types'\n\nconst DB_VERSION = 1\nconst DB_NAME = 'library'\nconst DB_INDEX_NAME = 'index'\nconst DB_STORE_NAME = 'books'\n\ninterface LibraryDB extends DBSchema {\n  [DB_INDEX_NAME]: {\n    key: number\n    value: Book\n  }\n  [DB_STORE_NAME]: {\n    key: number\n    value: string\n  }\n}\n\nconst dbPromise = openDB<LibraryDB>(DB_NAME, DB_VERSION, {\n  upgrade(db, oldVersion) {\n    if (oldVersion < 1) {\n      db.createObjectStore(DB_INDEX_NAME, { keyPath: 'id' })\n      db.createObjectStore(DB_STORE_NAME, { autoIncrement: true })\n    }\n  },\n})\n\nconst txPromise = async () =>\n  (await dbPromise).transaction([DB_INDEX_NAME, DB_STORE_NAME], 'readwrite')\n\nconst libraryDB = {\n  async getBookMeta(id: number) {\n    return (await dbPromise).get(DB_INDEX_NAME, id)\n  },\n  async getAllMeta() {\n    return (await dbPromise).getAll(DB_INDEX_NAME)\n  },\n  async getBookText(id: number): Promise<string> {\n    const result = await (await dbPromise).get(DB_STORE_NAME, id)\n    if (!result) {\n      throw Error(`can not find book ${id} in the locale db`)\n    } else {\n      return result\n    }\n  },\n  async addBook(meta: any, body: string = ''): Promise<Book> {\n    const timestamp = Date.now()\n    const tx = await txPromise()\n    const id = await tx.objectStore(DB_STORE_NAME).add(body)\n    const book: Book = { ...meta, id, timestamp }\n\n    await tx.objectStore(DB_INDEX_NAME).add(book)\n    await tx.done\n    return book\n  },\n  async updateBookMeta(bookId: number, updatedProps: any) {\n    const tx = await txPromise()\n    const store = tx.objectStore(DB_INDEX_NAME)\n    const oldBook = await store.get(bookId)\n    const updatedBook = { ...oldBook, ...updatedProps }\n    await store.put(updatedBook)\n    await tx.done\n    return updatedBook\n  },\n  async delete(bookId: number) {\n    const tx = await txPromise()\n    await tx.objectStore(DB_INDEX_NAME).delete(bookId)\n    await tx.objectStore(DB_STORE_NAME).delete(bookId)\n    await tx.done\n  },\n  async clear() {\n    const tx = await txPromise()\n    await tx.objectStore(DB_INDEX_NAME).clear()\n    await tx.objectStore(DB_STORE_NAME).clear()\n    await tx.done\n  },\n}\n\nexport default libraryDB\n","import { RootStore } from './RootStore'\nimport { action, makeAutoObservable, toJS } from 'mobx'\nimport libraryDB from '../uitls/clientDB'\nimport { BookList, Book } from '../types'\nimport * as converter from '../uitls/converter'\n\nexport type TCurrentBook =\n  | {\n      info: Book\n      text: string\n    }\n  | undefined\nexport class LibraryStore {\n  public isAddingBookInProcess = false\n  public isFetchingBooksInProcess = false\n  public books: BookList = []\n  public lastBook: TCurrentBook\n\n  private rootStore: RootStore\n\n  constructor(rootStore: RootStore) {\n    makeAutoObservable(this)\n    this.rootStore = rootStore\n  }\n  fetchBooksListAction = action(async () => {\n    this.isFetchingBooksInProcess = true\n    this.books = await libraryDB.getAllMeta()\n    this.isFetchingBooksInProcess = false\n  })\n\n  isBookExist = (name: string | undefined) =>\n    this.books.find((book: Book) => book.name === name)\n\n  addBookAction = action(async (rawBookText: string, name: string) => {\n    const { cover, meta } = converter.getBookPreviewInfo(rawBookText)\n    const newBook = {\n      name,\n      meta,\n      cover,\n    }\n\n    this.isAddingBookInProcess = true\n    const book = await libraryDB.addBook(newBook, rawBookText)\n    this.books.push(book)\n    this.isAddingBookInProcess = false\n    this.rootStore.notification.info('book has been added')\n  })\n\n  syncBookAction = action(async (meta: Book, body: string) => {\n    const { id, ...rest } = meta\n    const metaWithoutObserving = toJS(rest)\n    metaWithoutObserving.meta = toJS(metaWithoutObserving.meta)\n    const book = await libraryDB.addBook(metaWithoutObserving, body)\n    this.books.push(book)\n  })\n\n  removeBookAction = action(async (book: Book | null) => {\n    if (!book) return\n    await libraryDB.delete(book.id)\n    const bookIndex = this.books.indexOf(book)\n    this.books.splice(bookIndex, 1)\n    this.rootStore.notification.info('book has been removed')\n  })\n\n  updateBookPositionAction = action(\n    async (book: Book, positionElement: string) => {\n      const bookId = book.id\n      await libraryDB.updateBookMeta(bookId, { positionElement })\n      book.positionElement = positionElement\n      await this.rootStore.syncMetaAction(book)\n    }\n  )\n\n  updateBookAction = action(async (bookId: number, bookProps: any) => {\n    const bookInStore = this.books.find((book) => book.id === bookId)\n    if (bookInStore) {\n      Object.assign(bookInStore, bookProps)\n    }\n    await libraryDB.updateBookMeta(bookId, bookProps)\n  })\n\n  openBookAction = action(\n    async (bookId: number): Promise<TCurrentBook> => {\n      if (this.lastBook && this.lastBook.info.id === bookId) {\n        this.lastBook.info =\n          (await libraryDB.getBookMeta(bookId)) || this.lastBook.info\n        return Promise.resolve(this.lastBook)\n      } else {\n        return Promise.all([\n          libraryDB.getBookMeta(bookId),\n          libraryDB.getBookText(bookId),\n        ]).then((prom) => {\n          const info = prom[0] as Book\n          const rawText = prom[1] || ''\n          const text = converter.parseToInnerBook(rawText)\n\n          this.lastBook = {\n            info,\n            text,\n          }\n          return this.lastBook\n        })\n      }\n    }\n  )\n\n  fetchBookTextAction = action(\n    async (bookId: number) => await libraryDB.getBookText(bookId)\n  )\n}\n","import { RootStore } from './RootStore'\nimport { action, makeAutoObservable } from 'mobx'\nimport { Book } from '../types'\nimport * as cloud from '../uitls/cloud'\nimport libraryDB from '../uitls/clientDB'\n\nexport default class RemoteLibraryStore {\n  books: Book[] = []\n  isClientLoaded = false\n  isLoggedIn = false\n  isBooksLoading = false\n  isUploading = false\n  isDownloading = false\n  isBookRemoving = false\n\n  private remoteFolderName = 'careful-reader'\n  private cloudAppFolder = cloud.appFolder\n  private cloudDrive = cloud.drive\n  private rootStore: RootStore\n\n  constructor(rootStore: RootStore) {\n    makeAutoObservable(this)\n    this.rootStore = rootStore\n    cloud.load().then(() => {\n      this.isClientLoaded = true\n      cloud.isLoggedIn().then((isLoggedIn) => (this.isLoggedIn = isLoggedIn))\n    })\n  }\n  initLibrary = action(async () => {\n    cloud.drive.create.folder('books-folder')\n  })\n\n  fetchBooksListAction = action(async () => {\n    try {\n      this.isBooksLoading = true\n\n      const cloudFolderFiles = await this.cloudDrive.find.file(\n        `name contains '.fb2'`\n      )\n      console.log('list', cloudFolderFiles)\n      cloudFolderFiles.map((file: any) => file.name)\n      const cloudFiles = await this.cloudAppFolder.find.file(\n        `name contains '-meta.json'`\n      )\n      const contentPromises = cloudFiles.map((fileMeta: { id: string }) =>\n        this.cloudAppFolder.download(fileMeta.id).then((content) => {\n          //@ts-ignore\n          const book: Book = JSON.parse(content)\n\n          this.books.push(book)\n        })\n      )\n      this.books = []\n      await Promise.all(contentPromises)\n      console.log('remote books', this.books)\n    } catch (e) {\n      this.rootStore.notification.error('Fetching remote books error')\n    } finally {\n      this.isBooksLoading = false\n    }\n  })\n\n  uploadBookAction = action(async (book: Book | null) => {\n    if (!book) return\n    try {\n      this.isUploading = true\n      const [currentFolder] = await this.cloudDrive.getOrCreate.folder(\n        `name = '${this.remoteFolderName}'`,\n        this.remoteFolderName\n      )\n      const [currentFile] = await this.cloudDrive.getOrCreate.file(\n        `name = '${book.name}' and '${currentFolder.id}' in parents`,\n        book.name,\n        currentFolder.id\n      )\n      const bookText = await libraryDB.getBookText(book.id)\n      const { id: textFileId } = await this.cloudDrive.upload(\n        currentFile.id,\n        bookText\n      )\n      const updatedBookMeta = await libraryDB.updateBookMeta(book.id, {\n        textFileId,\n      })\n      // const result = await this.syncMetaAction(updatedBookMeta)\n      book.textFileId = textFileId\n      console.log('book', book)\n      this.books.push(book)\n      this.rootStore.notification.info('Upload success')\n      return updatedBookMeta\n    } catch (e) {\n      this.rootStore.notification.error('Upload error')\n    } finally {\n      this.isUploading = false\n    }\n  })\n\n  syncMetaAction = action(async (book: Book | null) => {\n    if (!book) return\n    console.log('book for upload:', book)\n    try {\n      const metaFileName = book.name + '-meta.json'\n      const [currentFile] = await this.cloudAppFolder.getOrCreate.file(\n        `name = '${metaFileName}'`,\n        metaFileName\n      )\n      const { id: metaFileId } = await this.cloudAppFolder.upload(\n        currentFile.id,\n        JSON.stringify(book)\n      )\n      const result = await libraryDB.updateBookMeta(book.id, { metaFileId })\n      const clientBook = this.books.find((b) => b.name === book.name)\n      if (clientBook) {\n        Object.assign(clientBook, book)\n      } else {\n        this.books.push(book)\n      }\n      return result\n    } catch (e) {\n      this.rootStore.notification.error('sync error')\n    } finally {\n    }\n  })\n\n  downloadBookAction = action(async (book: Book | null) => {\n    if (!book) return\n    let result = ''\n    try {\n      this.isDownloading = true\n      if (book.textFileId) {\n        this.rootStore.notification.info('download sucess')\n        result = await this.cloudDrive.download(book.textFileId)\n      }\n      await this.rootStore.syncBookAction(book, result)\n\n      return result\n    } catch (e) {\n      console.error(e)\n      this.rootStore.notification.error('download error')\n      return result\n    } finally {\n      this.isDownloading = false\n    }\n  })\n\n  forceBookRemove = async (book: Book) => {\n    const cloudMetaFile = await this.cloudAppFolder.find\n      .file(`name = '${book.name}-meta.json'`)\n      .then(([file]) => file?.id && this.cloudAppFolder.remove(file.id))\n\n    const cloudFile = await this.cloudDrive.find\n      .file(`name = '${book.name}'`)\n      .then(({ file }) => file?.id && this.cloudDrive.remove(file.id))\n\n    return Promise.allSettled([cloudFile, cloudMetaFile])\n  }\n\n  removeBookAction = action(async (book: Book | null) => {\n    if (!book) return\n    try {\n      this.isBookRemoving = true\n      const index = this.books.indexOf(book)\n      if (index > -1) {\n        this.books.splice(index, 1)\n      }\n      if (!book.metaFileId || !book.textFileId) {\n        await this.forceBookRemove(book)\n      } else {\n        const promises = []\n\n        book.textFileId &&\n          promises.push(this.cloudDrive.remove(book.textFileId))\n        book.metaFileId &&\n          promises.push(this.cloudAppFolder.remove(book.metaFileId))\n        await Promise.allSettled(promises)\n      }\n      this.rootStore.notification.info('book remove sucess')\n    } catch (e) {\n      this.rootStore.notification.error('book remove error')\n    } finally {\n      this.isBookRemoving = false\n    }\n  })\n}\n","import { action, makeAutoObservable } from 'mobx'\nimport { createContext } from 'react'\nimport { Book } from 'src/types'\nimport AppStore from './AppStore'\nimport { LibraryStore } from './LibraryStore'\nimport RemoteLibraryStore from './RemoteLibraryStore'\n\ninterface INotification {\n  message: string\n  type: string\n}\nexport class RootStore {\n  appStore: AppStore\n  libraryStore: LibraryStore\n  remoteLibraryStore: RemoteLibraryStore\n  notifications: INotification[] = []\n  public notification = {\n    info: action((message: string) => {\n      this.notifications.push({ message, type: 'info' })\n    }),\n    error: action((message: string) => {\n      this.notifications.push({ message, type: 'error' })\n    }),\n  }\n  syncMetaAction = action(async (book: Book) => {\n    return await this.remoteLibraryStore.syncMetaAction(book)\n  })\n  syncBookAction = action(async (book: Book, body: string) => {\n    return await this.libraryStore.syncBookAction(book, body)\n  })\n  constructor() {\n    makeAutoObservable(this)\n    this.appStore = new AppStore(this)\n    this.remoteLibraryStore = new RemoteLibraryStore(this)\n    this.libraryStore = new LibraryStore(this)\n  }\n\n  removeNotification(index: number) {\n    this.notifications.splice(index, 1)\n  }\n}\n\nexport const RootStoreContext = createContext<RootStore>({} as RootStore)\n","import React, { useContext } from 'react'\n\nimport { observer } from 'mobx-react'\nimport Button from '@material-ui/core/Button'\nimport { RootStoreContext } from '../../store/RootStore'\n\nexport default observer(function SignInButton() {\n  const { appStore } = useContext(RootStoreContext)\n  const {\n    isClientLoaded,\n    isLoggedIn,\n    signInAction,\n    signOutAction,\n  } = appStore\n  \n  return (\n    <>\n      {isClientLoaded && (\n        <>\n          {isLoggedIn ? (\n            <Button onClick={signOutAction} color=\"inherit\">\n              LogOut\n            </Button>\n          ) : (\n              <Button onClick={signInAction} color=\"inherit\">\n                Login\n              </Button>\n            )}\n        </>\n      )}\n    </>\n  )\n})\n","import React, { ReactNode } from 'react'\nimport './loading.scss'\nimport styled from 'styled-components'\nimport { LinearProgress } from '@material-ui/core'\nimport { useContext } from 'react'\nimport { RootStoreContext } from '../../store/RootStore'\nimport { observer } from 'mobx-react'\ninterface ISwitcher {\n  readonly switch: boolean\n}\nconst Switcher = styled.div<ISwitcher>`\n  display: ${(props) => (props.switch ? 'block' : 'none')};\n`\ninterface TLoading {\n  loading: boolean\n  children: ReactNode\n}\nexport default observer(function Loading({ loading, children }: TLoading) {\n  return (\n    <>\n      <Switcher switch={loading}>\n        <div>Loading</div>\n      </Switcher>\n      {children}\n    </>\n  )\n})\n\nexport const LoadingLine = observer(() => {\n  const { libraryStore, remoteLibraryStore } = useContext(RootStoreContext)\n  const showLoading = remoteLibraryStore.isBooksLoading\n    || remoteLibraryStore.isUploading\n    || remoteLibraryStore.isDownloading\n    || remoteLibraryStore.isBookRemoving\n    || libraryStore.isAddingBookInProcess\n    || libraryStore.isFetchingBooksInProcess\n\n    return (<>{showLoading && <LinearProgress />}</>)\n})\n","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { Link, useLocation } from 'react-router-dom'\nimport TuneIcon from '@material-ui/icons/Tune'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport { AuthButtons } from '../controls'\nimport styled from 'styled-components'\nimport { RootStoreContext } from '../../store/RootStore'\nimport { LoadingLine } from '../loading/Loading'\n\nconst TopHeightWorkaround = styled.div``\nconst Title = styled(Typography)`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    flex-grow: 1;\n`\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  menuButton: {\n    marginRight: '',\n  },\n  title: {\n    flexGrow: 1,\n  },\n})\n\nexport default observer(function Header({ children, className = '', title }: any) {\n  const classes = useStyles()\n  const [isOpen, setIsOpen] = useState(false)\n  const location = useLocation()\n  const pathTitleMap: any = {\n    '/': 'Library',\n    '/settings': 'Settings',\n  }\n  const pathname: string = location.pathname || ''\n  const headTitle = title || pathTitleMap[pathname]\n  const { libraryStore: {lastBook} } = useContext(RootStoreContext)\n\n  const toggleDrawer = (state: boolean) => (event: any) => {\n    if (\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return\n    }\n    setIsOpen(state)\n  }\n  const list = () => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <List>\n        {lastBook?.info?.meta && (\n          <Link to={`/read/${lastBook.info.id}`}>\n            <ListItem button>\n              <ListItemIcon>\n                <LibraryBooksIcon />\n              </ListItemIcon>\n              <ListItemText primary={lastBook.info.meta.title} />\n            </ListItem>\n          </Link>\n        )}\n        <Link to=\"/\">\n          <ListItem button>\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Home\" />\n          </ListItem>\n        </Link>\n\n        <Link to=\"/settings\">\n          <ListItem button>\n            <ListItemIcon>\n              <TuneIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n        </Link>\n      </List>\n      <Divider />\n    </div>\n  )\n  return (\n    <>\n      <TopHeightWorkaround>\n        <AppBar />\n        <Toolbar />\n      </TopHeightWorkaround>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <React.Fragment>\n              <MenuIcon onClick={toggleDrawer(true)} />\n              <Drawer anchor=\"left\" open={isOpen} onClose={toggleDrawer(false)}>\n                {list()}\n              </Drawer>\n            </React.Fragment>\n          </IconButton>\n          <Title variant=\"h6\" >\n            {headTitle}\n          </Title>\n          {children}\n          <AuthButtons />\n        </Toolbar>\n        <LoadingLine />\n      </AppBar>\n    </>\n  )\n})\n","import { MouseEventHandler, MutableRefObject, useEffect } from 'react'\n\ntype TUseBoubleClickProps = {\n  ref: MutableRefObject<Element | undefined>\n  latency?: number\n  onSingleClick?: MouseEventHandler\n  onDoubleClick?: MouseEventHandler\n}\nconst useDoubleClick = ({\n  ref,\n  latency = 300,\n  onSingleClick,\n  onDoubleClick,\n}: TUseBoubleClickProps) => {\n  useEffect(() => {\n    const clickRef = ref.current\n    let clickCount = 0\n    const handleClick = (e: any) => {\n      clickCount += 1\n\n      setTimeout(() => {\n        if (clickCount === 1) onSingleClick && onSingleClick(e)\n        else if (clickCount === 2) onDoubleClick && onDoubleClick(e)\n\n        clickCount = 0\n      }, latency)\n    }\n\n    clickRef?.addEventListener('click', handleClick)\n    return () => {\n      clickRef?.removeEventListener('click', handleClick)\n    }\n  })\n}\n\nexport default useDoubleClick\n","import React, { useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { Book } from '../../types'\nimport Paper from '@material-ui/core/Paper'\nimport styled from 'styled-components'\nimport useDoubleClick from '../../hooks/UseDoubleClick'\n\nconst Container = styled(Paper)`\n  width: 115px;\n  height: 185px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  word-break: break-all;\n  padding: 5px;\n  margin: 5px;\n  cursor: pointer;\n`\nconst Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n`\ninterface BookItemProps {\n  book: Book\n  onSingleClick?: () => void\n  onDoubleClick?: () => void\n  children?: any\n}\nconst BookItem = observer(\n  ({ book, children, onSingleClick, onDoubleClick, ...rest }: BookItemProps) => {\n    const buttonRef = useRef();\n\n    useDoubleClick({\n      onSingleClick,\n      onDoubleClick,\n      ref: buttonRef,\n      latency: 200\n    });\n\n    return (\n      <Container elevation={3} ref={buttonRef}>\n        {children}\n        {book.cover ? (\n          <>\n            <Image src={book.cover} alt=\"\" />\n          </>\n        ) : (\n            <div>{book.name}</div>\n          )}\n      </Container>\n    )\n  }\n)\n\nexport default BookItem\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Book } from '../../types'\nimport BookItem from '../../components/common/BookItem'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport styled from 'styled-components'\n\ntype TShelveActionHandler = (book: Book | null) => void\n\nconst Spacer = styled.div`\n  height: 56px;\n  width: 100%;\n`\n\nexport type TSheveAction = {\n  text: string\n  handler: TShelveActionHandler\n}\ninterface TShelve {\n  books: Book[]\n  dialogBookClickHandler?: TShelveActionHandler\n  actions: TSheveAction[]\n}\n\nconst Shelve = observer(\n  ({ books, actions, dialogBookClickHandler }: TShelve) => {\n    const [isBookDialogOpenned, setIsBookDialogOpenned] = useState(false)\n    const [selectedBook, setSelectedBook] = useState<Book | null>(null)\n    const bookClickHandler = (book: Book) => {\n      setIsBookDialogOpenned(true)\n      setSelectedBook(book)\n    }\n    const handleDialogClose = () => {\n      setIsBookDialogOpenned(false)\n      setSelectedBook(null)\n    }\n    const handleBookAction = (action: TSheveAction) => {\n      action.handler(selectedBook)\n      handleDialogClose()\n    }\n    const handleDefaultAction = (book: Book) => dialogBookClickHandler && dialogBookClickHandler(book)\n\n    return (\n      <>\n        <Box display=\"flex\" justifyContent=\"center\" flexWrap=\"wrap\">\n          {books.map((book: Book, index: number) => (\n            <BookItem key={index} book={book}\n              onSingleClick={() => bookClickHandler(book)}\n              onDoubleClick={() => handleDefaultAction(book)}\n            />\n          ))}\n          <Spacer />\n        </Box>\n        <Dialog\n          onClose={handleDialogClose}\n          open={isBookDialogOpenned}\n          fullWidth={true}\n        >\n          <DialogTitle></DialogTitle>\n          <DialogContent>\n            <Grid container justify=\"center\" spacing={2}>\n              <Grid item>\n                {selectedBook && (\n                  <BookItem\n                    book={selectedBook}\n                    onSingleClick={() =>\n                      handleDefaultAction(selectedBook)\n                    }\n                  />\n                )}\n              </Grid>\n              <Grid item xs={8}>\n                <Typography display=\"block\" noWrap={true}>\n                  {selectedBook?.name}\n                </Typography>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            {actions.map((action, index) => (\n              <Button\n                key={index}\n                onClick={() => handleBookAction(action)}\n                color=\"primary\"\n              >\n                {action.text}\n              </Button>\n            ))}\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n)\n\nexport default Shelve\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport { Book } from '../../types'\nimport { Loading } from '../../components/loading'\nimport Shelve, { TSheveAction } from './Shelve'\nimport { RootStoreContext } from '../..//store/RootStore'\n\nconst RemoteBooksList = observer(() => {\n  const { libraryStore, remoteLibraryStore } = useContext(RootStoreContext)\n  const {\n    books,\n    isBooksLoading,\n    isLoggedIn,\n    downloadBookAction,\n    removeBookAction,\n  } = remoteLibraryStore\n\n  const { isBookExist } = libraryStore\n\n  const collectBook = async (book: Book | null) => {\n    if (isBookExist(book?.name)) {\n      return\n    }\n    await downloadBookAction(book)\n  }\n  const actions: TSheveAction[] = [\n    {\n      text: 'remove',\n      handler: removeBookAction,\n    },\n    {\n      text: 'collect',\n      handler: collectBook,\n    },\n  ]\n\n  return (\n    <>\n      <div className={`collection ${!isLoggedIn ? 'hidden' : ''}`}>\n        <Loading loading={isBooksLoading}>\n          <Shelve\n            books={books}\n            dialogBookClickHandler={collectBook}\n            actions={actions}\n          />\n        </Loading>\n      </div>\n    </>\n  )\n})\nexport default RemoteBooksList\n","import { observer } from 'mobx-react'\nimport { readFileContent } from '../../uitls/common'\nimport React, { useContext } from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { RootStoreContext } from '../../store/RootStore';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    position: 'absolute',\n    right: 0,\n    bottom: theme.spacing(8),\n  },\n  fab: {\n    right: theme.spacing(2),\n  },\n  input: {\n    display: 'none'\n  }\n}));\n\nconst AddBookButton = observer(({ ...rest }: any) => {\n  const { libraryStore: { addBookAction } } = useContext(RootStoreContext)\n  const theme = useTheme();\n  const classes = useStyles(theme)\n\n  function onChangeHandler(event: React.ChangeEvent<HTMLInputElement>) {\n    if (event.target.files?.length) {\n      const file = event.target.files[0]\n      readFileContent(file).then((text: string) => {\n        addBookAction(text, file.name)\n      })\n    }\n  }\n\n  return (\n    <label className={classes.container} {...rest} htmlFor=\"btn-add-book\">\n      <input\n        type=\"file\"\n        name=\"\"\n        id=\"btn-add-book\"\n        onChange={onChangeHandler}\n        accept=\".fb2\"\n        className={classes.input}\n      />\n      <Fab\n        color=\"primary\"\n        component=\"span\"\n        className={classes.fab}>\n        <AddIcon />\n      </Fab>\n\n    </label>\n  )\n})\n\n\nconst BooksListPlaceholder = observer(() => (\n  <div className=\"book-list-placeholder\">\n    <div className=\"centered\">\n      <div>\n        Welcome! You haven't uploaded any books yet. Careful Reader supports\n        <strong>&nbsp;fb2&nbsp;</strong>\n        ones.\n      </div>\n      <AddBookButton className=\"add-btn-placeholder\" />\n    </div>\n  </div>\n))\n\nexport { AddBookButton, BooksListPlaceholder }\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport { Book } from '../../types'\nimport { useHistory } from 'react-router-dom'\nimport Shelve, { TSheveAction } from './Shelve'\nimport { RootStoreContext } from '../..//store/RootStore'\n\nconst LocalBooksList = observer(() => {\n  const history = useHistory()\n  const { libraryStore, remoteLibraryStore } = useContext(RootStoreContext)\n  const { books, removeBookAction } = libraryStore\n  const { uploadBookAction, syncMetaAction } = remoteLibraryStore\n  const handleBookRead = (book: Book | null) => {\n    book && history.push(`/read/${book.id}`)\n  }\n\n  const actions: TSheveAction[] = [\n    {\n      text: 'remove',\n      handler: removeBookAction,\n    },\n    {\n      text: 'read',\n      handler: handleBookRead,\n    },\n    {\n      text: 'upload',\n      handler: uploadBookAction,\n    },\n    {\n      text: 'sync',\n      handler: syncMetaAction\n    }\n  ]\n\n  return (\n      <Shelve\n        books={books}\n        dialogBookClickHandler={handleBookRead}\n        actions={actions}\n      />\n  )\n})\n\nexport default LocalBooksList\n","import React from 'react'\nimport { Header } from '../../components/common'\nimport { observer } from 'mobx-react'\nimport RemoteBooksList from './RemoteShelve'\nimport { AddBookButton } from './common'\nimport LocalBooksList from './LocalShelve'\nimport SwipeableViews from 'react-swipeable-views'\nimport { useTheme } from '@material-ui/core/styles'\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\nimport Zoom from '@material-ui/core/Zoom'\nimport AddIcon from '@material-ui/icons/Add'\nimport styled from 'styled-components'\n\nconst Contaier = styled.div`\n  position: relative;\n`\nconst Content = styled.div`\n  overflow: auto;\n`\nconst FabsContainer = styled.div`\n  position: fixed;\n  right: 0;\n  bottom: 0;\n`\nconst BottomMenu = styled.div`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  left: 0;\n`\nconst BottomMenuHeight = styled.div``\n\nexport default observer(function Shelves() {\n  const theme = useTheme()\n  const [value, setValue] = React.useState(0)\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  }\n  const handleChangeIndex = (index: number) => setValue(index)\n  const handleChange = (event: any, index: number) => handleChangeIndex(index)\n\n  const fabs = [\n    {\n      color: 'primary',\n      icon: <AddIcon />,\n      label: 'Add',\n      clickHandler: () => {\n        console.log('hey you')\n      },\n    },\n  ]\n\n  return (\n    <Contaier>\n      <Header></Header>\n      <Content>\n        <SwipeableViews index={value} onChangeIndex={handleChangeIndex}>\n          <LocalBooksList />\n          <RemoteBooksList />\n          <div>favorite</div>\n        </SwipeableViews>\n      </Content>\n      <FabsContainer>\n        {fabs.map((fab, index) => (\n          <Zoom\n            key={fab.color}\n            in={value === index}\n            timeout={transitionDuration}\n            style={{\n              transitionDelay: `${\n                value === index ? transitionDuration.exit : 0\n              }ms`,\n            }}\n            unmountOnExit\n          >\n            <AddBookButton />\n          </Zoom>\n        ))}\n      </FabsContainer>\n      <BottomMenu>\n        <BottomMenuHeight />\n\n        <BottomNavigation value={value} onChange={handleChange} showLabels>\n          <BottomNavigationAction label=\"local\" />\n          <BottomNavigationAction label=\"remote\" />\n          <BottomNavigationAction label=\"fav\" />\n        </BottomNavigation>\n      </BottomMenu>\n    </Contaier>\n  )\n})\n","import Shelves from './Shelves'\n\nexport default Shelves\n","const MAX_WORD_CLASSES = 100\n\nexport function hightLightElementsOnScreen(\n  screenElement: any,\n  allElements: any\n): any[] {\n  const onScreen: any[] = []\n  if (!screenElement) return onScreen\n  const viewportTop = screenElement.scrollTop\n  const viewportHeight = screenElement.clientHeight\n  const viewportBottom = viewportTop + viewportHeight\n  for (let i = 0; i < allElements.length; i++) {\n    const el = allElements[i]\n    if (isOnScreen(el, screenElement)) {\n      stylize(el)\n      onScreen.push(el)\n    }\n    if (el.offsetTop > viewportBottom) {\n      break\n    }\n  }\n  return onScreen\n}\n\nexport function getStyledElement(text: string) {\n  // const separator = /(?:,| |&nbsp;|\\.)+/\n  const indexes = shuffle([...Array(MAX_WORD_CLASSES).keys()])\n  const separator = ' '\n  let index = 0\n  const children = text\n    .split(separator)\n    .map((word: string) => {\n      index = index >= MAX_WORD_CLASSES ? 0 : index + 1\n      return `<span class=\"w${indexes[index]}\">${word}</span>`\n    })\n    .join(separator)\n  const wrapper = document.createElement('hlw')\n  wrapper.innerHTML = children\n  return wrapper\n}\n\nfunction shuffle<T>(array: Array<T>) {\n  return array.sort(() => Math.random() - 0.5)\n}\n\nfunction textNodesUnder(el: HTMLElement) {\n  let n\n  const result = []\n  let walk = document.createTreeWalker(el, NodeFilter.SHOW_TEXT, null, false)\n  while ((n = walk.nextNode())) result.push(n)\n  return result\n}\n\nexport function stylize(element: HTMLElement) {\n  if (element.className.includes('hg')) return\n\n  textNodesUnder(element).forEach((textElement: any) => {\n    if (textElement) {\n      const styledTextElement = getStyledElement(textElement.textContent)\n      textElement.replaceWith(styledTextElement)\n      element.className += ' hg'\n    }\n  })\n}\n\nfunction isOnScreen(el: any, screenContainerElement: any) {\n  const viewportTop = screenContainerElement.scrollTop\n  const viewportHeight = screenContainerElement.clientHeight\n  const viewportBottom = viewportTop + viewportHeight\n  const top = el.offsetTop\n  const height = el.clientHeight\n  const bottom = top + height\n\n  return (\n    (top >= viewportTop && top < viewportBottom) ||\n    (bottom > viewportTop && bottom <= viewportBottom) ||\n    (height > viewportHeight && top <= viewportTop && bottom >= viewportBottom)\n  )\n}\n","import React, { useEffect, useState, useRef, useContext } from 'react'\nimport './Reader.scss'\nimport { useParams } from 'react-router-dom'\nimport { debounce } from '../../uitls/common'\nimport { hightLightElementsOnScreen } from '../../uitls/styler'\nimport { Header } from '../../components/common'\nimport { observer } from 'mobx-react'\nimport useEventListener from '@use-it/event-listener'\nimport { Loading } from '../../components/loading'\nimport { useDebounce } from 'use-debounce'\nimport styled from 'styled-components'\nimport { RootStoreContext } from '../../store/RootStore'\nimport { TCurrentBook } from 'src/store/LibraryStore'\n\nconst PageCount = styled.span`\n  white-space: nowrap;\n  padding: 6px 8px;\n`\ninterface QueryParams {\n  bookId: string\n}\n\nconst dfunc = debounce((fn) => fn && fn(), 100)\n\nexport default observer(function Reader() {\n  const { appStore, libraryStore } = useContext(RootStoreContext)\n  const { wordsHighlight, dynamicTextOrientation } = appStore\n  const { updateBookPositionAction, openBookAction, lastBook } = libraryStore\n  // const [ currentBook, setCurrentBook ] = useState(lastBook)\n  const currentBookRef =  useRef<TCurrentBook>(lastBook)\n  const [numberOfcurrentPage, setNumberOfCurrentPage] = useState(0)\n  const [currenPositionPercent, setCurrenPositionPercent] = useState('0.0')\n  const [pagesCount, setPagesCount] = useState(0)\n  const [showControls, setShowControls] = useState(false)\n  const textContainerRef = useRef<HTMLDivElement | null>(null)\n  const elementsForHightlightRef = useRef([])\n  const [loading, setLoading] = useState(false)\n  const queryParams = useParams<QueryParams>()\n  const bookId = parseInt(queryParams.bookId)\n  const [motionStyle, setMotionStyle] = useState({})\n\n  useEffect(() => {\n    const { current } = textContainerRef\n    const openBook = async () => {\n      setLoading(true)\n      const openedBook = await openBookAction(bookId)\n      currentBookRef.current = openedBook\n      openedBook && (current!.innerHTML = openedBook.text)\n      elementsForHightlightRef.current = getElementsForHightlight()\n      setPagesCount(getPagesCount())\n      const positions: any[] = []\n      current\n        ?.querySelectorAll('p')\n        .forEach((o: HTMLElement) => positions.push(o.getAttribute('data-id')))\n      openedBook && restoreScrollPoition(openedBook.info.positionElement)\n      setLoading(false)\n    }\n\n    openBook()\n    current!.addEventListener('scroll', handleScroll)\n    return () => {\n      return current!.removeEventListener('scroll', handleScroll)\n    }\n  }, [])\n\n  const [dtoStyle] = useDebounce(motionStyle, 5)\n  const deviceOrientationHandler = ({ gamma }: DeviceOrientationEvent) => {\n    if (!dynamicTextOrientation) {\n      setMotionStyle({ transform: '' })\n      return\n    }\n    if (gamma) {\n      const style = {\n        transform: `rotateZ(${-gamma}deg)`,\n      }\n      setMotionStyle(style)\n    }\n  }\n  const bookTitle = () =>\n    currentBookRef.current?.info?.meta?.title || currentBookRef.current?.info?.name\n  useEventListener('deviceorientation', deviceOrientationHandler)\n  return (\n    <div className=\"reader\">\n      <Header\n        className={`${showControls ? '' : ' hidden'} `}\n        title={bookTitle()}\n      >\n        <div className=\"\">{currenPositionPercent}%</div>\n        <PageCount>{`${numberOfcurrentPage}/${pagesCount}`}</PageCount>\n      </Header>\n      <Loading loading={loading}>\n        <div className={`list-view ${wordsHighlight ? 'highlight' : ''}`}>\n          <div\n            className=\"text-container\"\n            onClick={toggleMenuHandler}\n            style={dtoStyle}\n            ref={textContainerRef}\n          ></div>\n        </div>\n      </Loading>\n    </div>\n  )\n\n  function getElementsForHightlight() {\n    const result: any = []\n    document.querySelectorAll('p').forEach((el: any) => {\n      result.push(el)\n    })\n    return result.sort((a: any, b: any) => a.offsetTop > b.offsetTop)\n  }\n\n  function handleScroll(e: Event) {\n    const { current } = textContainerRef\n    const { current: elementsForHightlight } = elementsForHightlightRef\n    if (current) {\n      const percent = getPercentOfScroll()\n      setCurrenPositionPercent(percent.toFixed(2))\n      setNumberOfCurrentPage(getNumberOfCurrentPage())\n      dfunc(() => {\n        const onScreen =\n          hightLightElementsOnScreen(current, elementsForHightlight) || []\n        updateBookPosition(onScreen[0])\n      })\n    }\n  }\n\n  function getPercentOfScroll() {\n    const { current } = textContainerRef\n    return current ? (current.scrollTop * 100) / current.scrollHeight : 0.0\n  }\n\n  function updateBookPosition(posElement: HTMLElement) {\n    if (posElement) {\n      const positionElementId = posElement.getAttribute('data-id')\n      const book = currentBookRef.current?.info\n      book && positionElementId && updateBookPositionAction(book, positionElementId)\n    }\n  }\n\n  function restoreScrollPoition(positionId: string) {\n    if (positionId) {\n      const toElement = document.querySelector(`[data-id=\"${positionId}\"]`)\n      toElement?.scrollIntoView()\n    }\n  }\n\n  function getPagesCount() {\n    const { current } = textContainerRef\n    return Math.round(current!.scrollHeight / current!.clientHeight)\n  }\n\n  function getNumberOfCurrentPage() {\n    const { current } = textContainerRef\n    return Math.round(current!.scrollTop / current!.clientHeight)\n  }\n\n  function toggleMenuHandler() {\n    setShowControls(!showControls)\n  }\n})\n","import Reader from './Reader'\n\nexport default Reader\n","export default __webpack_public_path__ + \"static/media/page1.7720a4ef.jpg\";","export default __webpack_public_path__ + \"static/media/page2.c690ddc0.jpg\";","export default __webpack_public_path__ + \"static/media/page3.ce566b3c.jpg\";","import { observer } from 'mobx-react'\nimport React, { useContext } from 'react'\nimport { useIntl } from 'react-intl'\nimport { Header } from '../../components/common'\nimport AppContext from '../../store/AppStore'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Grid from '@material-ui/core/Grid'\nimport Switch from '@material-ui/core/Switch'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport styled from 'styled-components'\nimport PageCoverImage1 from '../../static/page1.jpg'\nimport PageCoverImage2 from '../../static/page2.jpg'\nimport PageCoverImage3 from '../../static/page3.jpg'\nimport { RootStoreContext } from '../..//store/RootStore'\n\nconst FormControlStyled = styled(FormControl)`\n  margin: 10px;\n  min-width: 200px;\n`\nconst CoverImage = styled.img`\n  height: 56px;\n`\n\nexport default observer(function Settings() {\n  const { appStore } = useContext(RootStoreContext)\n  const {\n    locale,\n    imageCover,\n    wordsHighlight,\n    isUseImageCover,\n    pageBackgroundColor,\n    dynamicTextOrientation,\n  } = appStore\n  const intl = useIntl()\n  const handleInputChange = (\n    event: React.ChangeEvent<any>\n  ) => {\n    const handlerName: string = event.target.name\n    const handlerParams = event.target.type === 'checkbox' ? event.target.checked : event.target.value\n    //@ts-ignore\n    const handler = appStore[handlerName]\n    if (typeof handler === 'function') {\n      handler(handlerParams)\n    }\n  }\n\n  const getUseImageCoverTitle = () =>\n    isUseImageCover ? 'изображение' : 'сплошной текст'\n\n  return (\n    <>\n      <Header></Header>\n      <Grid container>\n        <Grid item xs={12}>\n          <FormControlStyled>\n            <InputLabel id=\"language-select-label\">\n              {intl.formatMessage({ id: 'settings.language' })}\n            </InputLabel>\n            <Select\n              labelId=\"language-select-label\"\n              value={locale}\n              name=\"setLocale\"\n              onChange={handleInputChange}\n            >\n              <MenuItem value={'ru'}>Русский</MenuItem>\n              <MenuItem value={'en'}>English</MenuItem>\n            </Select>\n          </FormControlStyled>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlStyled>\n            <FormLabel component=\"legend\">\n              Подсветка слов в тексте для упрощения поиска строк глазами\n            </FormLabel>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={wordsHighlight}\n                  onChange={handleInputChange}\n                  name=\"toggleHightligting\"\n                />\n              }\n              label=\"Подсветка слов\"\n            />\n          </FormControlStyled>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlStyled>\n            <FormLabel component=\"legend\">\n              Подстраивать положение текста в зависимости от ориентации\n              устройства\n            </FormLabel>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={dynamicTextOrientation}\n                  onChange={handleInputChange}\n                  name=\"toggleDynamicTextOrientation\"\n                />\n              }\n              label=\"Динамическая ориентация текста\"\n            />\n          </FormControlStyled>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlStyled>\n            <FormLabel component=\"legend\">Подложка книги</FormLabel>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={isUseImageCover}\n                  onChange={handleInputChange}\n                  name=\"toggleUseImageCover\"\n                />\n              }\n              label={getUseImageCoverTitle()}\n            />\n          </FormControlStyled>\n          {isUseImageCover && <FormControlStyled>\n            <InputLabel id=\"cover-image-select-label\">\n              {intl.formatMessage({ id: 'settings.coverImage' })}\n            </InputLabel>\n            <Select\n              labelId=\"cover-image-select-label\"\n              value={imageCover}\n              name=\"setImageCoverAction\"\n              onChange={handleInputChange}\n            >\n              <MenuItem value={'1'}>\n                <CoverImage src={PageCoverImage1} />\n              </MenuItem>\n              <MenuItem value={'2'}>\n                <CoverImage src={PageCoverImage2} />\n              </MenuItem>\n              <MenuItem value={'3'}>\n                <CoverImage src={PageCoverImage3} />\n              </MenuItem>\n            </Select>\n          </FormControlStyled>}\n          {!isUseImageCover && <FormControlStyled>\n            <TextField\n              id=\"cover-bg-color-input-label\"\n              label={intl.formatMessage({ id: 'settings.coverBgColor' })}\n              type=\"text\"\n              value={pageBackgroundColor}\n              name=\"setPageBackgroundColorAction\"\n              onChange={handleInputChange}\n              margin=\"normal\"\n            />\n          </FormControlStyled>\n          }\n        </Grid>\n      </Grid>\n    </>\n  )\n})\n","import React, { useContext, useEffect } from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Alert from '@material-ui/lab/Alert';\nimport { observer } from 'mobx-react'\nimport { RootStoreContext } from '../store/RootStore'\n\nconst Notifications = observer(({ rootStore }: any) => {\n  const { notifications } = useContext(\n    RootStoreContext\n  )\n\n  return (\n    <>\n      {notifications.map(({ message, type }, i: number) => (\n        <Notification message={message} index={i} type={type} key={`notification-${i}`} />\n      ))}\n    </>\n  )\n})\n\ntype TNotificationProps = { message: string, index: number, type: string }\nconst Notification = ({ message, index, type }: TNotificationProps) => {\n  const [open, setOpen] = React.useState(true)\n  const rootStore = useContext(\n    RootStoreContext\n  )\n  const handleClose = (event: React.SyntheticEvent, reason?: string) => {\n    setOpen(false)\n    rootStore.removeNotification(index)\n  }\n  const getAlertClassForType = () => {\n    const typeClassMap = {\n      info: 'success',\n      error: 'error'\n    }\n    //@ts-ignore\n    return typeof type === 'string' ? typeClassMap[type] : 'success'\n  }\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n    >\n      <Alert onClose={handleClose} severity={getAlertClassForType()}>\n        {message}\n      </Alert>\n    </Snackbar>\n  )\n}\n\nexport default Notifications\n","import React, { useEffect } from 'react'\nimport './App.scss'\nimport Shelves from './pages/shelves'\nimport Reader from './pages/reader'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { observer } from 'mobx-react'\nimport { RootStoreContext, RootStore } from './store/RootStore'\nimport { IntlProvider } from 'react-intl'\nimport { Settings } from './pages/settings'\nimport Notifications from './components/Notifications'\n\nconst rootStore = new RootStore()\n\nconst App = observer(function App() {\n  const basename =\n    process.env.NODE_ENV === 'development' ? '/' : process.env.PUBLIC_URL\n  const { appStore, libraryStore, remoteLibraryStore } = rootStore\n  const { isLoggedIn } = remoteLibraryStore\n  const messages = appStore.getLocaleMessages()\n  useEffect(() => {\n    libraryStore.fetchBooksListAction()\n  }, [])\n\n  const fetchBooks = async () => {\n    if (isLoggedIn) await remoteLibraryStore.fetchBooksListAction()\n  }\n  useEffect(() => {\n    fetchBooks()\n  }, [isLoggedIn])\n\n  return (\n    <RootStoreContext.Provider value={rootStore}>\n      <IntlProvider\n        locale={appStore.locale}\n        defaultLocale={appStore.defaultLocale}\n        messages={messages}\n      >\n        <Router basename={basename}>\n          <Switch>\n            {/* <Route exact path=\"/\">\n                  <Feed />\n                </Route> */}\n            <Route exact path=\"/\">\n              <Shelves />\n            </Route>\n            <Route exact path=\"/read/:bookId\">\n              <Reader />\n            </Route>\n            <Route exact path=\"/settings\">\n              <Settings />\n            </Route>\n          </Switch>\n        </Router>\n        <Notifications />\n      </IntlProvider>\n    </RootStoreContext.Provider>\n  )\n})\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'normalize.css'\n\nconst app = <App />\n\nReactDOM.render(app, document.getElementById('root'))\nserviceWorker.register()\n"],"sourceRoot":""}